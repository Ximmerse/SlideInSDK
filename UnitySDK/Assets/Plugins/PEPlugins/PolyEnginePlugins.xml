<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PolyEnginePlugins</name>
    </assembly>
    <members>
        <member name="T:PolyEngine.OneOffObject">
             <summary>
             一次性的临时对象。
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.PEPhysicsRaycaster">
             <summary>
             加强版的PhysicsRaycaster，
             1）解除"Point要在屏幕内"这一限制
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.GraphicColliderManager">
             <summary>
             GraphicCollider管理器
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.GameObjectBundleReference">
             <summary>
             Game object bundle reference.
             </summary>
            </member>
        <member name="T:PolyEngine.TransformExtension">
             <summary>
             Transform extension : extension method for UnityEngine.Transform
             </summary>
            </member>
        <member name="M:PolyEngine.TransformExtension.GetOrCreateChild(UnityEngine.Transform,System.String)">
             <summary>
             Gets the or create child transform of name.
             </summary>
            </member>
        <member name="M:PolyEngine.TransformExtension.InverseTransformQuaternion(UnityEngine.Transform,UnityEngine.Quaternion)">
             <summary>
             Inverses the quaternion to transform's local rotation
             </summary>
             <param name="transform">Transform.</param>
             <param name="worldRotation">World rotation.</param>
            </member>
        <member name="M:PolyEngine.TransformExtension.DeleteAllChildren(UnityEngine.Transform,System.Single)">
             <summary>
             Deletes all children from self.
             </summary>
             <param name="transform">Transform.</param>
            </member>
        <member name="M:PolyEngine.TransformExtension.DeleteAllChildren(UnityEngine.GameObject,System.Single)">
             <summary>
             Deletes all children from self.
             </summary>
             <param name="transform">Transform.</param>
            </member>
        <member name="T:PolyEngine.LayerMaskExtensions">
             <summary>
             This class contains tools for working with LayerMasks. 
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.Contains(UnityEngine.LayerMask,System.Int32)">
             <summary>
             Does the LayerMask contain a specific layer index?
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.Create(System.String[])">
             <summary>
             Creates a LayerMask from an array of layer names.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.Create(System.Int32[])">
             <summary>
             Creates a LayerMask from an array of layer indexes.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.NamesToMask(System.String[])">
             <summary>
             Creates a LayerMask from a number of layer names.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.LayerNumbersToMask(System.Int32[])">
             <summary>
             Creates a LayerMask from a number of layer indexes.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.Inverse(UnityEngine.LayerMask)">
             <summary>
             Inverts a LayerMask.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.AddToMask(UnityEngine.LayerMask,System.String[])">
             <summary>
             Adds a number of layer names to an existing LayerMask.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.RemoveFromMask(UnityEngine.LayerMask,System.String[])">
             <summary>
             Removes a number of layer names from an existing LayerMask.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.MaskToNames(UnityEngine.LayerMask)">
             <summary>
             Returns a string array of layer names from a LayerMask.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.MaskToNumbers(UnityEngine.LayerMask)">
             <summary>
             Returns an array of layer indexes from a LayerMask.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.MaskToString(UnityEngine.LayerMask)">
             <summary>
             Parses a LayerMask to a string.
             </summary>
            </member>
        <member name="M:PolyEngine.LayerMaskExtensions.MaskToString(UnityEngine.LayerMask,System.String)">
             <summary>
             Parses a LayerMask to a string using the specified delimiter.
             </summary>
            </member>
        <member name="T:PolyEngine.pVector4Int">
             <summary>
             Vector4 int
             </summary>
            </member>
        <member name="M:PolyEngine.pVector4Int.Clamp(PolyEngine.pVector4Int,PolyEngine.pVector4Int)">
             <summary>
             Clamps the Vector4Int to the bounds given by min and max.
             </summary>
             <param name="min">Minimum.</param>
             <param name="max">Max.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.Max(PolyEngine.pVector4Int,PolyEngine.pVector4Int)">
             <summary>
             Returns a vector that is made from the largest components of two vectors.
             </summary>
             <param name="lhs">Lhs.</param>
             <param name="rhs">Rhs.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.Min(PolyEngine.pVector4Int,PolyEngine.pVector4Int)">
             <summary>
             Returns a vector that is made from the smallest components of two vectors.
             </summary>
             <param name="lhs">Lhs.</param>
             <param name="rhs">Rhs.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.Distance(PolyEngine.pVector4Int,PolyEngine.pVector4Int)">
             <summary>
             return distance between a and b
             </summary>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.FloorToInt(UnityEngine.Vector4)">
             <summary>
             Converts a Vector4 to a Vector4Int by doing a Floor to each value.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.RoundToInt(UnityEngine.Vector4)">
             <summary>
             Converts a Vector3 to a Vector3Int by doing a Round to each value.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.CeilToInt(UnityEngine.Vector4)">
             <summary>
             Converts a Vector3 to a Vector3Int by doing a Ceiling to each value.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="M:PolyEngine.pVector4Int.Scale(PolyEngine.pVector4Int,PolyEngine.pVector4Int)">
             <summary>
             Multiplies two vectors component-wise.
             Every component in the result is a component of a multiplied by the same component of b.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="T:PolyEngine.RandomizeAnimatorParameter">
             <summary>
             Randomize animator parameter when animator state enter or exit.
             </summary>
            </member>
        <member name="F:PolyEngine.RandomizeAnimatorParameter.unduplicate">
             <summary>
             If true, the randomize value should always not equal to last choosen one.
             </summary>
            </member>
        <member name="P:PolyEngine.RandomizeAnimatorParameter.Unduplicate">
             <summary>
             If true, the randomize value should always not equal to last choosen one.
             </summary>
             <value><c>true</c> if unduplicate; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.RandomizeAnimatorParameter.parameterType">
             <summary>
             Parameter type, int or float is supported
             </summary>
             <value>The type of the parameter.</value>
            </member>
        <member name="T:PolyEngine.InputSystem.PointerInfo">
             <summary>
             Pointer info
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.index">
             <summary>
             if mouse, index = mouse button (0,1,2)
             if touch, index = touch id
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pointerPosition">
             <summary>
             The pointer position.
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pointerStartPosition">
             <summary>
             The pointer start position
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pointerDelta">
             <summary>
             The pointer delta movement (vector2 to previous frame)
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pointerMagnitude">
             <summary>
             The pointer magnitude.
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pointerMagnitudeByDPI">
             <summary>
             The pointer magnitude in meters with calculation of DPI.
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pointerDeltaNormalized">
             <summary>
             The pointer delta normalized.
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.isLongHeldEventInvoked">
             <summary>
             Flag : is long held event invoked.
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.pressure">
             <summary>
             The pressure of the pointer (Mobile support only)
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.beganOnUIObject">
             <summary>
             If this pointer begans on a UI blocking layer object.
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PointerInfo.isMoved">
             <summary>
             Flag: if the pointer is moved during its life time.
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleExtension">
             <summary>
             Asset bundle extension.
             AssetBundle缓存器 ： 用于缓存所有的从AssetBundle中加载的资源对象。 
             </summary>
            </member>
        <member name="T:PolyEngine.CameraExtension">
             <summary>
             Camera extension.
             </summary>
            </member>
        <member name="M:PolyEngine.CameraExtension.SetCameraFov(UnityEngine.Camera,System.Single,System.Single)">
             <summary>
             Set camera's horizontal fov and vertical fov , this will break the built in fov which depends on screen's aspect.
             To restore the original fov based on Unity setting, call ResetProjectionMatrix().
             </summary>
             <param name="camera">Camera.</param>
             <param name="hFov">H fov.</param>
             <param name="vFov">V fov.</param>
             <param name="viewportScale">Viewport scale.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraProjectionMatrix(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Constructs a projection matrix where near, far, hFov and vFov is defined.
             </summary>
             <param name="near">Near.</param>
             <param name="far">Far.</param>
             <param name="hFov">H fov.</param>
             <param name="vFov">V fov.</param>
             <param name="projectionMatrix">Projection matrix.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraProjectionMatrixByCorners(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
             <summary>
             Gets the camera projection matrix by corners.
             </summary>
             <returns>The camera projection matrix by corners.</returns>
             <param name="bottomLeft">Bottom left.</param>
             <param name="bottomRight">Bottom right.</param>
             <param name="topLeft">Top left.</param>
             <param name="topRight">Top right.</param>
             <param name="cameraPosition">Camera position.</param>
             <param name="near">Near.</param>
             <param name="far">Far.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraProjectionMatrix2(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Constructs a projection matrix where near, far, nearW and nearH is defined.
             </summary>
             <param name="near">Near.</param>
             <param name="far">Far.</param>
             <param name="hFov">H fov.</param>
             <param name="vFov">V fov.</param>
             <param name="projectionMatrix">Projection matrix.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.SetCameraFovWithScale(UnityEngine.Camera,System.Single,System.Single,System.Single)">
             <summary>
             Sets the camera's vFov and hFov with a scale factor.
             </summary>
             <param name="camera">Camera.</param>
             <param name="viewportScale">Viewport scale.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraFrustumRay(UnityEngine.Camera,UnityEngine.Ray@,UnityEngine.Ray@,UnityEngine.Ray@,UnityEngine.Ray@)">
             <summary>
             Output 4 rays, 4 rays denotes to:
             [0] = frustum's bottom-left corner at near plane to far plane.
             [1] = frustum's bottom-right corner at near plane to far plane.
             [2] = frustum's top-left corner at near plane to far plane.
             [3] = frustum's top-right corner at near plane to far plane.
             </summary>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraFrustumRay(UnityEngine.Camera,UnityEngine.Ray@,UnityEngine.Ray@,UnityEngine.Ray@,UnityEngine.Ray@,System.Single@,System.Single@,System.Single@,System.Single@)">
             <summary>
             Output 4 rays and distance from near corner to far corner. 4 rays denotes to:
             [0] = frustum's bottom-left corner at near plane to far plane.
             [1] = frustum's bottom-right corner at near plane to far plane.
             [2] = frustum's top-left corner at near plane to far plane.
             [3] = frustum's top-right corner at near plane to far plane.
             </summary>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraFrustumCorners(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[])">
             <summary>
             Output 2 4-dimemsional arrays which represents the near and far plane of view frustum. 
             
             The vertice order is [0]=bottom left, [1]=bottom right, [2] = top left, [3] = top right
             </summary>
             <param name="camera">Camera.</param>
             <param name="nearPlaneCorners">Near plane corners.</param>
             <param name="farPlaneCorners">Far plane corners.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraViewPortCornersAtDistance(UnityEngine.Camera,System.Single,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,System.Single,UnityEngine.Space)">
             <summary>
             Gets the camera view port corners at distance.
             Scale controls the scale relative to corners center. 
             Passing scale larger than 1 you will get corners composite a rect that largers than the original view port rect, vice versa.
             By passing space = Space.Self, output the local camera space position instead of world space position.
             </summary>
             <param name="camera">Camera.</param>
             <param name="distance">Distance.</param>
             <param name="leftBottom">Left bottom.</param>
             <param name="leftTop">Left top.</param>
             <param name="rightTop">Right top.</param>
             <param name="rightBottom">Right bottom.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraProjectionMatrixViewPortInfo(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
             <summary>
             Gets the camera projection matrix view port info.
             </summary>
             <param name="nearViewPortW">Near view port w.</param>
             <param name="nearViewPortH">Near view port h.</param>
             <param name="hFov">H fov.</param>
             <param name="vFov">V fov.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraProjectionMatrixViewPortInfo(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)">
             <summary>
             Gets the camera projection matrix view port info.
             </summary>
             <param name="nearViewPortW">Near view port w.</param>
             <param name="nearViewPortH">Near view port h.</param>
             <param name="hFov">H fov.</param>
             <param name="vFov">V fov.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetCameraProjectionMatrixViewPortInfo(UnityEngine.Matrix4x4,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@,System.Single@)">
             <summary>
             Gets the camera projection matrix view port info directly from projection matrix.
             </summary>
             <param name="projectionMatrix">Projection matrix.</param>
             <param name="nearViewPortW">Near view port w.</param>
             <param name="nearViewPortH">Near view port h.</param>
             <param name="farViewPortW">Far view port w.</param>
             <param name="farViewPortH">Far view port h.</param>
             <param name="near">Near.</param>
             <param name="far">Far.</param>
             <param name="hFov">H fov.</param>
             <param name="vFov">V fov.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.GetOrthographicCameraBounds(UnityEngine.Matrix4x4,System.Single@,System.Single@,System.Single@,System.Single@)">
             <summary>
             Output the orthographic camera's 2D projection rect bounds info.
             </summary>
             <param name="matrix">Matrix.</param>
             <param name="w">The width.</param>
             <param name="h">The height.</param>
            </member>
        <member name="M:PolyEngine.CameraExtension.AlignToPhysicsScreen(UnityEngine.Camera,System.Single)">
             <summary>
             Sets the camera FOV , the near view port will ends up matching the current displaying screen's physical size.
             If viewPortScale not equal to 1, the near view port's final scale will be displaying screen's physical scalee multiple the viewPortScale parameter.
             </summary>
             <param name="viewPortScale">View port scale.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.IBaseInputInjecter">
             <summary>
             BaseInput注入器接口
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.IBaseInputInjecter.InjectBaseInput(UnityEngine.EventSystems.BaseInput)">
             <summary>
             注入
             </summary>
             <param name="injectBaseInput">inject base input</param>
            </member>
        <member name="T:PolyEngine.PEGUI">
             <summary>
             Polyengine GUI
             </summary>
            </member>
        <member name="P:PolyEngine.PEGUI.redLabelStyle">
             <summary>
             Gets the red label style
             </summary>
             <value>The red label.</value>
            </member>
        <member name="P:PolyEngine.PEGUI.whiteLabelStyle">
             <summary>
             Gets the white label style
             </summary>
             <value>The red label.</value>
            </member>
        <member name="P:PolyEngine.PEGUI.blackLabelStyle">
             <summary>
             Gets the black label style
             </summary>
             <value>The red label.</value>
            </member>
        <member name="T:PolyEngine.AssetBundles.CopyAssetBundleOperation">
             <summary>
             Copy asset bundle operation.
             </summary>
            </member>
        <member name="T:PolyEngine.PEMathf">
             <summary>
             Polyengine mathf methods library.
             </summary>
            </member>
        <member name="M:PolyEngine.PEMathf.Approximately(UnityEngine.Vector4,UnityEngine.Vector4)">
             <summary>
             Approximately the specified a and b.
             </summary>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Approximately(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Approximately the specified a and b.
             </summary>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Approximately(UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Approximately the specified a and b.
             </summary>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.PrettyAngle(System.Single)">
             <summary>
             Makes the angle a pretty value between [-180 ... 180]
             </summary>
             <returns>The angle.</returns>
             <param name="angle">Angle.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.FlattenXZ(UnityEngine.Quaternion@)">
             <summary>
             把 rotation 的X和Z轴旋转角度设置为0。
             Flatten 之后的方向只有水平旋转角度。
             </summary>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.FlattenXZ(UnityEngine.Quaternion)">
             <summary>
             把 rotation 的X和Z轴旋转角度设置为0。
             Flatten 之后的方向只有水平旋转角度。
             </summary>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.DistanceXZ(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Get the XZ d of dir1 and dir2 (on XZ surface)
             </summary>
             <returns>The X.</returns>
             <param name="dir1">Dir1.</param>
             <param name="dir2">Dir2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.DotXZ(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Get the XZ DOT of dir1 and dir2 (on XZ surface)
             </summary>
             <returns>The X.</returns>
             <param name="dir1">Dir1.</param>
             <param name="dir2">Dir2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.SignedAngleXZ(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Get the XZ signed angle of dir1 and dir2 (on XZ surface)
             </summary>
             <returns>The X.</returns>
             <param name="dir1">Dir1.</param>
             <param name="dir2">Dir2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.AngleXZ(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Get the XZ angle of dir1 and dir2 (on XZ surface)
             </summary>
             <returns>The X.</returns>
             <param name="dir1">Dir1.</param>
             <param name="dir2">Dir2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.RoundSingle(System.Single,System.Int32)">
             <summary>
             Rounds the float.
             </summary>
             <returns>The float.</returns>
             <param name="f">F.</param>
             <param name="digit">Digit.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.RoundVector2(UnityEngine.Vector2,System.Int32)">
             <summary>
             Rounds the vector2.
             </summary>
             <returns>The float.</returns>
             <param name="f">F.</param>
             <param name="digit">Digit.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.RoundVector3(UnityEngine.Vector3,System.Int32)">
             <summary>
             Rounds the vector3.
             </summary>
             <returns>The float.</returns>
             <param name="f">F.</param>
             <param name="digit">Digit.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.RoundVector4(UnityEngine.Vector4,System.Int32)">
             <summary>
             Rounds the vector4.
             </summary>
             <returns>The float.</returns>
             <param name="f">F.</param>
             <param name="digit">Digit.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.SignedAngle(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Gets the signed angle of baseDir and dir2
             </summary>
             <returns>The angle.</returns>
             <param name="baseDir">Base dir.</param>
             <param name="dir2">Dir2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.SignedAngle(UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             返回 dir2 到 baseDir 的带符号角度。
             如果在dir2在baseDir右边，返回1.
             否则返回-1.
             如果方向相同，返回0
             </summary>
             <returns>The angle.</returns>
             <param name="baseDir">Base dir.</param>
             <param name="dir2">Dir2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.AbsDiff(System.Single,System.Single)">
             <summary>
             计算两个float 的绝对值距离
             </summary>
             <returns>The diff.</returns>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Min(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Minimum of two vectors
             </summary>
             <param name="v1">V1.</param>
             <param name="v2">V2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Clamp01(UnityEngine.Vector3)">
             <summary>
             把 vect.x,y,z 的值  Clamp 在 [0..1]
             </summary>
             <param name="vect">Vect.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Max(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Maximum of two vectors
             </summary>
             <param name="v1">V1.</param>
             <param name="v2">V2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.YawByAngle(UnityEngine.Quaternion,System.Single)">
             <summary>
             对 rotation 做Yaw(水平旋转 N个角度)
             </summary>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.PitchByAngle(UnityEngine.Quaternion,System.Single)">
             <summary>
             对 rotation 做 Pitch (以X为轴旋转 N个角度)
             </summary>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.ClampVector2(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Clamps the vector2.
             </summary>
             <returns>The vector2.</returns>
             <param name="v2">V2.</param>
             <param name="minV2">Minimum v2.</param>
             <param name="maxV2">Max v2.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Approach(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             给出原数值 single, 和目标值 target, 速度 speed, 令 single 以speed的速度逼近 target。
             </summary>
             <param name="single">Single.</param>
             <param name="target">Target.</param>
             <param name="speed">Speed.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.Int2FractionalFloat(System.Int32)">
             <summary>
             转换整形数字为小数点后的浮点值： 12345 --&gt; 0.12345
             </summary>
             <returns>The fractional float.</returns>
             <param name="Int">Int.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.ThreePlaneIntersection(UnityEngine.Plane,UnityEngine.Plane,UnityEngine.Plane)">
             <summary>
             Calculate three plane's intersection position.
             </summary>
             <returns>The plane intersection.</returns>
             <param name="p1">P1.</param>
             <param name="p2">P2.</param>
             <param name="p3">P3.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.LineIntersection(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Calculate two line segment's intersection point.
             Do not calculate the intersection point, faster than another version. 
             </summary>
             <returns><c>true</c>, if intersection was lined, <c>false</c> otherwise.</returns>
             <param name="p1">P1 - Line 1 start point</param>
             <param name="p2">P2 - Line 1 end point</param>
             <param name="p3">P3 - Line 2 start point</param>
             <param name="p4">P4 - Line 2 end point</param>
             <param name="intersection">Intersection.</param>
            </member>
        <member name="M:PolyEngine.PEMathf.LineIntersection(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)">
             <summary>
             Calculate two line segment's intersection point.
             </summary>
             <returns><c>true</c>, if intersection was lined, <c>false</c> otherwise.</returns>
             <param name="p1">P1 - Line 1 start point</param>
             <param name="p2">P2 - Line 1 end point</param>
             <param name="p3">P3 - Line 2 start point</param>
             <param name="p4">P4 - Line 2 end point</param>
             <param name="intersection">Intersection.</param>
            </member>
        <member name="T:PolyEngine.Animators.WaitForState">
             <summary>
             Wait for animator to enter animator state.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member F:PolyEngine.Animators.WaitForState.TransitionPass-->
        <member name="F:PolyEngine.Animators.WaitForState.FullStateNameHash">
             <summary>
             The full state name hash.
             </summary>
            </member>
        <member name="F:PolyEngine.Animators.WaitForState.Animator">
             <summary>
             The animator.
             </summary>
            </member>
        <member name="F:PolyEngine.Animators.WaitForState.Layer">
             <summary>
             The layer index.
             </summary>
            </member>
        <member name="M:PolyEngine.Animators.WaitForState.#ctor(UnityEngine.Animator,System.String,System.Boolean,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Animators.WaitForState" /> struct.
             </summary>
             <param name="animator">Animator.</param>
             <param name="StateName">State name.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="M:PolyEngine.Animators.WaitForState.#ctor(UnityEngine.Animator,System.Int32,System.Boolean,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Animators.WaitForState" /> struct.
             </summary>
             <param name="animator">Animator.</param>
             <param name="StateName">State name.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="M:PolyEngine.Animators.WaitForState.Set(System.String,System.Boolean,System.Int32)">
             <summary>
             Set the specified FullStateName, TransitionFullyPass and Layer.
             </summary>
             <param name="FullStateName">Full state name.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="M:PolyEngine.Animators.WaitForState.Set(System.Int32,System.Boolean,System.Int32)">
             <summary>
             Set the specified FullStateNameHash, TransitionFullyPass and Layer.
             </summary>
             <param name="FullStateNameHash">Full state name hash.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="P:PolyEngine.Animators.WaitForState.keepWaiting">
             <summary>
             Gets a value indicating whether this <see cref="T:PolyEngine.Animators.WaitForState" /> keep waiting.
             </summary>
             <value><c>true</c> if keep waiting; otherwise, <c>false</c>.</value>
            </member>
        <member name="T:PolyEngine.InputSystem.GraphicCollider">
             <summary>
             提供PhysicsGraphic检测的Collider
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GraphicCollider.OnEnable">
             <summary>
             AddGraphicCollider
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GraphicCollider.OnDisable">
             <summary>
             RemoveGraphicCollider
             </summary>
            </member>
        <member name="T:PolyEngine.Reflection.PEReflectionUtility">
             <summary>
             Polyengine reflection utility 
             </summary>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.GetEnumerations``1">
             <summary>
             Return enumerations in array
             </summary>
             <returns>The enumerations.</returns>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.GetEnumerationsExcept``1(``0[])">
             <summary>
             Return enumerations in array
             </summary>
             <returns>The enumerations.</returns>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.GetFieldValue``1(System.Object,System.String,System.Reflection.BindingFlags,System.Boolean)">
             <summary>
             Gets the field value.
             </summary>
             <returns>The field value.</returns>
             <param name="_object">Object.</param>
             <param name="FieldName">Field name.</param>
             <param name="bFlag">B flag.</param>
             <param name="SearchUpwards">If set to <c>true</c> search upwards.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.SetFieldValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags,System.Boolean)">
             <summary>
             Sets the field value to the _object .
             Return true for setting successfully.
             </summary>
             <param name="_object">Object.</param>
             <param name="FieldName">Field name.</param>
             <param name="FieldValue">Field value.</param>
             <param name="bindingAttribute">Binding attribute.</param>
             <param name="SearchUpwards">If set to <c>true</c> search upwards.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.GetPropertyValue``1(System.Object,System.String,System.Reflection.BindingFlags,System.Boolean)">
             <summary>
             Gets the property value.
             </summary>
             <returns>The field value.</returns>
             <param name="_object">Object.</param>
             <param name="FieldName">Field name.</param>
             <param name="bFlag">B flag.</param>
             <param name="SearchUpwards">If set to <c>true</c> search upwards.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.SetPropertyValue``1(System.Object,System.String,``0,System.Reflection.BindingFlags,System.Boolean)">
             <summary>
             Gets the property value.
             </summary>
             <returns>The field value.</returns>
             <param name="_object">Object.</param>
             <param name="FieldName">Field name.</param>
             <param name="bFlag">B flag.</param>
             <param name="SearchUpwards">If set to <c>true</c> search upwards.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.SearchMethodUpwards(System.Type,System.String,System.Reflection.BindingFlags)">
             <summary>
             Searchs the method in the given type and its base type.
             </summary>
             <returns>The method upwards.</returns>
             <param name="MethodName">Method name.</param>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.SearchTypeByName(System.String)">
             <summary>
             Finds the type in given fullname, case sensitive..
             </summary>
             <returns>The type.</returns>
            </member>
        <member name="M:PolyEngine.Reflection.PEReflectionUtility.FindAllAssignableTypes(System.Type,System.Collections.Generic.List{System.Type})">
             <summary>
             Finds all children types to the target type.
             Return true if found.
             If OnlyProjectScripts = true, search only the scripts presents in this project. 
             Else search for all DLL loaded.
             </summary>
             <param name="">.</param>
            </member>
        <member name="F:PolyEngine.PEDraw.PEDrawType.HumanSkeleton">
             <summary>
             Draw a human skeleton, where original model height = 1m.
             </summary>
            </member>
        <member name="F:PolyEngine.PEDraw.PEDrawType.HumanSkeletonLine">
             <summary>
             Draw a human skeleton line, where original model height = 1m
             </summary>
            </member>
        <member name="F:PolyEngine.PEDraw.PEDrawType.DogSkeleton">
             <summary>
             Draw a human skeleton, where original model width = 1m
             </summary>
            </member>
        <member name="F:PolyEngine.PEDraw.PEDrawType.DogSkeletonLine">
             <summary>
             Draw a human skeleton line, where original model width = 1m
             </summary>
            </member>
        <member name="F:PolyEngine.PEDraw.PEDrawType.GUICircle">
             <summary>
             Draws a GUI circle.
             </summary>
            </member>
        <member name="F:PolyEngine.PEDraw.PEDrawType.ScreenRect">
             <summary>
             Draws full screen rect.
             </summary>
            </member>
        <member name="M:PolyEngine.PEDraw.SetCustomMaterial(UnityEngine.Material,System.Int32)">
             <summary>
             Sets the custom material for previous draw command.
             </summary>
             <param name="CustomMaterial">Custom material.</param>
             <param name="Pass">Pass.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a line.
             </summary>
             <param name="start">Start.</param>
             <param name="end">End.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single)">
             <summary>
             Draws a line.
             </summary>
             <param name="start">Start.</param>
             <param name="end">End.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a ray.
             </summary>
             <param name="start">Start.</param>
             <param name="direction">Direction.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawRay(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Single,System.Single)">
             <summary>
             Draws a ray.
             </summary>
             <param name="start">Start.</param>
             <param name="direction">Direction.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a sphere.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWireSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wire sphere.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWiredSphere(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)">
             <summary>
             Draws a sphere with wired.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawArrow(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws an arrow.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawMesh(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws mesh directly
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawMeshWireframe(UnityEngine.Mesh,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws mesh wire frame
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawCube(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a cube.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawCone(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a cone.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawCylinder(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a cylinder.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawPyramid(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a pyramid.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWireCube(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wire cube.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWiredCube(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wired cube.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawCuboid(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a cuboid.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWireCuboid(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wire Cuboid.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWiredCuboid(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wired Cuboid.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawQuad(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a quad.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWireQuad(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a quad of wire.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWiredQuad(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wired and filled quad.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawPlane(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a plane.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWirePlane(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,System.Single)">
             <summary>
             Draws a plane of wire.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawWiredPlane(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEngine.Color,UnityEngine.Color,System.Single)">
             <summary>
             Draws a wired and filled plane.
             </summary>
             <param name="center">Center.</param>
             <param name="radius">Radius.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawTranslateGizmos(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
             <summary>
             Draws the translate(positional) gizmos.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawText(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.String,UnityEngine.Font,UnityEngine.FontStyle,UnityEngine.Color,System.Single)">
             <summary>
             Draws text using default setting:
             alignment = middle center, 
             rich text = true,
             Best fit = false,
             Vertical and horizontal wrap mode = Overflow
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="text">Text.</param>
             <param name="setting">Setting.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawText(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.String,UnityEngine.TextGenerationSettings,System.Single)">
             <summary>
             Draws text using custom setting.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="text">Text.</param>
             <param name="setting">Setting.</param>
             <param name="color">Color.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.UIVerticesToTextMesh(System.Collections.Generic.List{UnityEngine.UIVertex},UnityEngine.Mesh)">
             <summary>
             Convert UI vertices to mesh
             </summary>
             <param name="verticesLst">Vertices lst.</param>
             <param name="TextMesh">Text mesh.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawRotationGizmos(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
             <summary>
             Draws the rotation gizmos.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawGrids(UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32,System.Int32,System.Single,System.Single,UnityEngine.Color,System.Single,PolyEngine.PEDraw.PEDrawAlignment)">
             <summary>
             Draws the grid gizmos.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawHumanSkeleton(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a human skeleton.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawHumanSkeletonLine(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a human skeleton line.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawGUICircle(UnityEngine.Vector3,System.Single,UnityEngine.Color,UnityEngine.Camera,System.Single)">
             <summary>
             Draws a GUI circle at the screen point.
             If drawSpace = ViewPort, Position and Radius is measured in screen coordination.
             Else If drawSpace = ScreenSpace, Screen point and Radius is measured in pixel coordination.
             Else If drawSpace = WorldSpace, Screen point and Radius is measured in 3D global coordination.
             </summary>
             <param name="ScreenPoint">Screen point.</param>
             <param name="Radius">Radius.</param>
             <param name="color">Color.</param>
             <param name="cameraTarget">Camera target.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawDogSkeleton(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a dog skeleton.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawDogSkeletonLine(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color,System.Single)">
             <summary>
             Draws a dog skeleton line.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawScaleGizmos(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
             <summary>
             Draws a scale gizmos.
             </summary>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.DrawScreenRect(UnityEngine.Color,System.Single,System.Single)">
             <summary>
             Draws a screen rect, when scale = 1, the rect fully covers screen viewport.
             </summary>
             <param name="color">Color.</param>
             <param name="scale">Scale.</param>
             <param name="duration">Duration.</param>
            </member>
        <member name="M:PolyEngine.PEDraw.InitializeBehavior">
             <summary>
             Initializes the behavior.
             </summary>
            </member>
        <member name="M:PolyEngine.PEDraw.ConvertPixelSpace(PolyEngine.PEDraw.PEDrawRequest@)">
             <summary>
             Converts the position from screen normalize space to pixel space.
             </summary>
             <param name="drawRequest">Draw request.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.PhysicsGraphic">
             <summary>
             类似Physics/Physics2D，提供关于Graphic的Physics功能
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PhysicsGraphic.RaycastRectTransform(UnityEngine.Ray,UnityEngine.RectTransform,System.Single,UnityEngine.LayerMask,System.Single@,System.Boolean)">
             <summary>
             检测Ray是否碰撞到RectTransform
             </summary>
             <param name="hitRay">Ray</param>
             <param name="rectTran">RectTransform</param>
             <param name="maxDistance">最大的检测距离</param>
             <param name="eventMask">检测的Layer层</param>
             <param name="distance">碰撞距离，若有</param>
             <param name="ignoreReversedRectTransform">是否忽略背向的RectTransform</param>
             <returns>是否碰撞到</returns>
            </member>
        <member name="T:PolyEngine.InputSystem.IGazeRayEmitter">
             <summary>
             GazeRayEmitter接口
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.IGazeRayEmitter.EventMask">
             <summary>
             检测的Layer层
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.IGazeRayEmitter.RayOrigin">
             <summary>
             Ray的Origin
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.IGazeRayEmitter.RaySpace">
             <summary>
             Ray的Space
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.IGazeRayEmitter.RayDirection">
             <summary>
             Ray的Direction
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.IGazeRayEmitter.MaxRayDistance">
             <summary>
             Ray的MaxDistance
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.GazeBaseInput">
             <summary>
             用于注入BaseInputModule的m_InputOverride，
             提供自定义的Input数据
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.GazeBaseInput.touchCount">
             <summary>
             由TouchProviderManager提供touchCount
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazeBaseInput.GetTouch(System.Int32)">
             <summary>
             由TouchProviderManager提供GetTouch
             </summary>
             <param name="index">touch index</param>
             <returns>Touch</returns>
            </member>
        <member name="T:PolyEngine.GizmosDrawWireSphere">
             <summary>
             Gizmos draw wire sphere.
             </summary>
            </member>
        <member name="T:PolyEngine.PEWaitForSeconds">
             <summary>
             Customed wait for seconds script,
             support customize wait second parameter after instantiation.
             </summary>
            </member>
        <member name="M:PolyEngine.PEWaitForSeconds.WaitForTime(System.Single)">
             <summary>
             Waits for seconds.
             </summary>
             <returns>The for seconds.</returns>
             <param name="Seconds">Seconds.</param>
            </member>
        <member name="M:PolyEngine.PEWaitForSeconds.WaitForRealtime(System.Single)">
             <summary>
             Waits for seconds.
             </summary>
             <returns>The for seconds.</returns>
             <param name="Seconds">Seconds.</param>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.Simplifier.Triangle">
             <summary>
             Stores vertex and mapping information.
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.Simplifier.TriangleList">
             <summary>
             A list of triangles. We encapsulate this as a class to be able to serialize a List of TriangleLists if we need to.
             Unity doesn't serialize a list of lists or an array of lists.
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.Simplifier.Vertex">
             <summary>
             Stores topology information and edge collapsing information.
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.Simplifier.VertexDataHash">
             <summary>
             Stores vertex data information. Also allows to compare two different objects of this type to
             know when two vertices share or not the same data.
             </summary>
            </member>
        <member name="M:PolyEngine.SingletonFactory.RegisterSingleton``1(``0)">
             <summary>
             Registers the singleton.
             </summary>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.SingletonFactory.RegisterSingleton(PolyEngine.I_Singleton,System.Type)">
             <summary>
             Registers a singleton interface implemenation object
             </summary>
             <param name="singleton">Singleton.</param>
            </member>
        <member name="M:PolyEngine.SingletonFactory.UnregisterSingleton(PolyEngine.I_Singleton,System.Type)">
             <summary>
             Unregisters the singleton.
             </summary>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.SingletonFactory.UnregisterSingleton``1(``0)">
             <summary>
             Unregisters the singleton.
             </summary>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.SingletonFactory.GetSingleton``1">
             <summary>
             Gets the singleton.
             </summary>
             <returns>The singleton.</returns>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.SingletonFactory.HasSingleton``1">
             <summary>
             Determines if has singleton.
             </summary>
             <returns><c>true</c> if has singleton; otherwise, <c>false</c>.</returns>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="T:PolyEngine.MinValueAttribute">
             <summary>
             Attach this Minimum max vector attribute to a vector2 property
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.PEInput">
             <summary>
             Input system wrapper.
             Expose touch input via touch property.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PEInput.InitializeTouch">
             <summary>
             Initializes the touch module.
             Should call before access PETouch function.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.PEInput.touch">
             <summary>
             Gets the touch interface.
             </summary>
             <value>The touch.</value>
            </member>
        <member name="T:PolyEngine.InputSystem.PETouchGesture">
             <summary>
             PE touch gesture.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member T:PolyEngine.EnumMaskAttribute-->
        <member name="T:PolyEngine.DisableAtAwake">
             <summary>
             Disable game object at awake
             </summary>
            </member>
        <member name="T:PolyEngine.PEUtils">
             <summary>
             Polyengine utils.
             PolyEngine 工具类方法。
             </summary>
            </member>
        <member name="M:PolyEngine.PEUtils.AddToArray``1(``0,``0[])">
             <summary>
             Adds element to an array.
             </summary>
             <returns>The to array.</returns>
             <param name="element">Element.</param>
             <param name="Array">Array.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.RemoveFromArray``1(System.Int32,``0[])">
             <summary>
             Removes the index from array and return new array
             </summary>
             <returns>The from array.</returns>
             <param name="index">Index.</param>
             <param name="Array">Array.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.RemoveFromArray``1(``0,``0[])">
             <summary>
             Removes element from array.
             </summary>
             <returns>The from array.</returns>
             <param name="element">Element.</param>
             <param name="Array">Array.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.InsideUnitCircle">
             <summary>
             返回一个 vector3 的 单位元随机向量。
             </summary>
             <returns>The unit circle.</returns>
            </member>
        <member name="M:PolyEngine.PEUtils.Include``1(``0[],``0)">
             <summary>
             Check if arrays includes the value
             </summary>
            </member>
        <member name="M:PolyEngine.PEUtils.RandomRange(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             Get random vector3 between [min] .. [max]
             </summary>
             <returns>The range.</returns>
             <param name="min">Minimum.</param>
             <param name="max">Max.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.RandomRange(UnityEngine.Vector2,UnityEngine.Vector2)">
             <summary>
             Get random vector2 between [min] .. [max]
             </summary>
             <returns>The range.</returns>
             <param name="min">Minimum.</param>
             <param name="max">Max.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.GetPhysicalDistanceOfScreenSpace(System.Single)">
             <summary>
             Gets the distance measured in sreen pixel space. Returned distance is measured in meters.
             </summary>
             <returns>The distance of screen points.</returns>
            </member>
        <member name="M:PolyEngine.PEUtils.GetActualDPI(System.Single@)">
             <summary>
             Gets the actual DPI.
             Always return true if not running on Android.
             When running on android, try getting DPI from native java class, if failed, using Screen.dpi and return false.
             </summary>
             <returns><c>true</c>, if actual DP was gotten, <c>false</c> otherwise.</returns>
             <param name="dpi">Dpi.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.GetPhysicalScreenSize(System.Single@,System.Single@)">
             <summary>
             Gets the size of the physical screen.
             return false if fail to get current DPI.
             useDensityDpiInAnroid : refer to file:///Applications/Unity/Documentation/en/ScriptReference/Screen-dpi.html
             If useDensityDpiInAnroid = true, use Screen.dpi in calculation, else use native java class interface to get a more precise DPI in calculation.
             </summary>
             <returns><c>true</c>, if physical screen size was gotten, <c>false</c> otherwise.</returns>
             <param name="w">The width.</param>
             <param name="h">The height.</param>
             <param name="useDensityDpiInAnroid">If set to <c>true</c> use density dpi in anroid.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.GetRandom``1(System.Collections.Generic.List{``0})">
             <summary>
             Gets a random element from list. 
             </summary>
             <returns><c>true</c>, if random was gotten, <c>false</c> otherwise.</returns>
             <param name="list">List.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.ShuffleList``1(System.Collections.Generic.IList{``0},System.Nullable{System.Int32})">
             <summary>
             Shuffle a list.
             </summary>
             <param name="list"></param>
             <typeparam name="T"></typeparam>
             <returns></returns>
            </member>
        <member name="M:PolyEngine.PEUtils.GetRandom``1(System.Collections.Generic.List{``0},System.Boolean)">
             <summary>
             Gets a random element from list.
             if [dropTheIndex] = true, the list will remove the chosen element
             </summary>
             <returns><c>true</c>, if random was gotten, <c>false</c> otherwise.</returns>
             <param name="list">List.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.GetXZDistance(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             获得p1,p2两点在XZ平面上的Distance
             </summary>
             <returns>The XZ sqr distance.</returns>
             <param name="p1">P1.</param>
             <param name="p2">P2.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.GetXZSqrDistance(UnityEngine.Vector3,UnityEngine.Vector3)">
             <summary>
             获得p1,p2两点在XZ平面上的Sqr Distance
             </summary>
             <returns>The XZ sqr distance.</returns>
             <param name="p1">P1.</param>
             <param name="p2">P2.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.Exists``1(``0[],``0)">
             <summary>
             Check element exists at array
             </summary>
             <param name="array">Array.</param>
             <param name="element">Element.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.CalculateFacingAngleXZ(UnityEngine.Transform,UnityEngine.Vector3)">
             <summary>
             计算transform.forward到 targetPosition 的夹角。
             只考虑XZ平面的夹角。
             </summary>
            </member>
        <member name="M:PolyEngine.PEUtils.ClampScalar(System.Single,System.Single)">
             <summary>
             Clamps the scalar.
             限制 single 的长度不大于 Scalar， 返回符号 = single 的浮点值.
             </summary>
             <returns>The scalar.</returns>
             <param name="single">Single.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.Clamp(UnityEngine.Rect,UnityEngine.Vector2)">
             <summary>
             Clamps the vect2 in rect bounds.
             </summary>
             <returns>The rect vect2.</returns>
             <param name="rect">Rect.</param>
             <param name="point">Point.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ZipAngle(System.Single)">
             <summary>
             把一个 0 - 360之间的代表角度的4个长度的float压缩为一个2个长度的 short。
             </summary>
             <returns>The angle.</returns>
            </member>
        <member name="M:PolyEngine.PEUtils.ZipDirection(UnityEngine.Vector3)">
             <summary>
             用一个 Vector2 表示一个方向.
             Vector2.x = 方向的Yaw角度。
             Vector2.y = 方向的Pitch角度。
             </summary>
             <returns>The direction.</returns>
             <param name="Direction">Direction.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ZipDirection(UnityEngine.Quaternion)">
             <summary>
             把 Rotation 压缩成 Vector2. X = Yaw, Y = Pitch, 忽略 Roll
             </summary>
             <returns>The direction.</returns>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.UnzipDirection(UnityEngine.Vector2)">
             <summary>
             ZipDirection 的反函数. 把一个压缩过的 Dir 还原.
             只能还原 Yaw 和 Pitch, 不适用于带 Roll 的方向。
             </summary>
             <returns>The direction.</returns>
             <param name="zippedVect">Zipped vect.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ZipXZDirection(UnityEngine.Vector3)">
             <summary>
             压缩一个 Direction : 把Direction投影到XZ面，用一个 Float 表示 XZ 投影向量和 (1,0)的角度
             </summary>
             <returns>The direction flatten.</returns>
             <param name="Direction">Direction.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.UnzipXZDirection(System.Single)">
             <summary>
             ZipXZDirection 的反函数 。 把一个 angle 还原为一个 Vector3 方向.
             </summary>
             <returns>The XZ direction.</returns>
             <param name="angle">Angle.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.RandomExcept``1(``0[],``0)">
             <summary>
             Get a random value from array, the result will exclude %excludeValue% for sure.
             If the array has only one element, then there is no choice - result will be the only element.
             </summary>
            </member>
        <member name="M:PolyEngine.PEUtils.CloneExcept``1(``0[],``0)">
             <summary>
             Clone an array, exclude the "except"
             </summary>
             <param name="array"></param>
             <param name="except"></param>
             <returns></returns>
            </member>
        <member name="M:PolyEngine.PEUtils.FindRoamingPointOnXZSurface(UnityEngine.AI.NavMeshAgent,System.Single,System.Single,UnityEngine.Vector3,System.Int32,System.Single)">
             <summary>
             在 XZ Surface 水平平面上随机获取一个 Nav Point。
             随机失败前提：
             - 距离太近
             - 得不到 navmesh 点。
             </summary>
             <returns>The roaming point on XZ surface.</returns>
             <param name="Radius">Radius.</param>
             <param name="CenterPosition">Center position.</param>
             /// <param name="MaxTry">Max try count.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindClosest(System.Collections.Generic.IEnumerable{UnityEngine.Component},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the closest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindClosest``1(System.Collections.Generic.List{``0},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the closest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindClosestGameObject(System.Collections.Generic.List{UnityEngine.GameObject},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the closest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindClosest(System.Collections.Generic.IEnumerable{UnityEngine.GameObject},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the closest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindFarest(System.Collections.Generic.IEnumerable{UnityEngine.Transform},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the farest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindFarest(System.Collections.Generic.IEnumerable{UnityEngine.GameObject},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the farest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindChildByPath(UnityEngine.Transform,System.String,System.Boolean)">
             <summary>
             Finds the child by given path.
             This method supports recursive path .
             </summary>
             <returns>The child path.</returns>
             <param name="parent">Parent.</param>
             <param name="Path">Path. For example: "root/skin/weapon"</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindClosest(System.Collections.Generic.IEnumerable{UnityEngine.Vector3},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the closest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.FindFarest(System.Collections.Generic.IEnumerable{UnityEngine.Vector3},UnityEngine.Vector3,System.Single@)">
             <summary>
             Finds the farest transform to the center point.
             </summary>
             <param name="transforms">Transforms.</param>
             <param name="center">Center.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ToXZDirection(UnityEngine.Vector3,System.Boolean)">
             <summary>
             Convert world direction to xz surface direction.
             </summary>
             <returns>The XZ direction.</returns>
             <param name="direction">Direction.</param>
             <param name="normalized">If set to <c>true</c> normalized.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ToXYZ(UnityEngine.Vector2,System.Single)">
             <summary>
             Converts XZ vector to XYZ. (Y is pass as parameter, default = 0)
             </summary>
             <returns>The to XY.</returns>
             <param name="xzVector">Xz vector.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ToXZ(UnityEngine.Vector3)">
             <summary>
             把3D坐标转换为2D (XZ)坐标。
             </summary>
             <returns>The X.</returns>
             <param name="pos3D">Pos3 d.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.ToXY(UnityEngine.Vector3)">
             <summary>
             把3D坐标转换为2D (XY)坐标。
             </summary>
             <returns>The X.</returns>
             <param name="pos3D">Pos3 d.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.GetRandom``1(System.Collections.Generic.List{``0},System.Int32)">
             <summary>
             从 list 列表中，随机抽取 count 个元素组成一个新的列表返回.
             </summary>
             <returns>The pick.</returns>
             <param name="list">List.</param>
             <param name="count">Count.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.GetRandom``1(System.Collections.Generic.List{``0},System.Int32,System.Collections.Generic.List{``0}@)">
             <summary>
             从 list 列表中，随机抽取 count 个元素组成一个新的列表返回.
             </summary>
             <returns>The pick.</returns>
             <param name="list">List.</param>
             <param name="count">Count.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PEUtils.RandomPointOnPlane(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
             <summary>
             给出一个 Plane，获取以 Position, Normal 定义的Plane， 半径为radius 的随机点
             </summary>
             <returns>The point on plane.</returns>
             <param name="position">Position.</param>
             <param name="normal">Normal.</param>
             <param name="radius">Radius.</param>
            </member>
        <member name="M:PolyEngine.PEUtils.AlignByChildTransform(UnityEngine.Transform,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion)">
             <summary>
             给出 RootTransform 和 其下的一个 childTransform, 放置rootTransform, 得出的结果是 childTransform 和 TargetMatrix 对齐
             </summary>
            </member>
        <member name="M:PolyEngine.PEUtils.TestContain(UnityEngine.Collider,UnityEngine.Vector3)">
             <summary>
             Tests the point is contained inside the collider.
             </summary>
             <returns><c>true</c>, if is contained was tested, <c>false</c> otherwise.</returns>
             <param name="collider">Collider.</param>
             <param name="Position">Position.</param>
            </member>
        <member name="T:PolyEngine.ScheduleMatchingTargetParameter">
             <summary>
             Schedule matching target parameter : parameter to schedule animator matching target behaviour in a target animator state.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.matchingTargetType">
             <summary>
             The type of the matching target.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.Animator">
             <summary>
             The animator.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.InterruptPrevMatchingTarget">
             <summary>
             If the animator is currently matching target, this flag control if interrupt it or wait for prev matching target stop.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.CompletePrevMatchingTargetAction">
             <summary>
             If InterruptPrevMatchingTarget = true, this is the parameter if complete the previous matching target action.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.TargetStateHash">
             <summary>
             Matching target when in target state.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.DynamicStartNormalizedTime">
             <summary>
             Should use dynamic start normalized time or fixed normalized time?
             If true, the start normalized time pass into MatchTarget() API is the current normalized time when calling MatchTarget().
             If false, the start normalized time pass into MatchTarget() API is FixedStartNormalizedTime.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.FixedStartNormalizedTime">
             <summary>
             The fixed start normalized time.
             </summary>
            </member>
        <member name="F:PolyEngine.ScheduleMatchingTargetParameter.EndNormalizedTime">
             <summary>
             The end normalized time pass to MatchTarget() API.
             </summary>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateDynamicStart(UnityEngine.Animator,System.String,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts dynamically at current animator state normalized time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateDynamicStart(UnityEngine.Animator,System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts dynamically at current animator state normalized time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateFixedStart(UnityEngine.Animator,System.String,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts at animator state normalized start time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateFixedStart(UnityEngine.Animator,System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts at animator state normalized start time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateDynamicStartByTag(UnityEngine.Animator,System.String,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts dynamically at current animator state normalized time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateDynamicStartByTag(UnityEngine.Animator,System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts dynamically at current animator state normalized time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateFixedStartByTag(UnityEngine.Animator,System.String,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts at animator state normalized start time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="M:PolyEngine.ScheduleMatchingTargetParameter.CreateFixedStartByTag(UnityEngine.Animator,System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
             <summary>
             Creates a parameter that starts at animator state normalized start time.
             </summary>
             <returns>The dynamic matching target.</returns>
            </member>
        <member name="T:PolyEngine.SerializableHashList`1">
             <summary>
             Serializable Hash List with generic type constructor.
             </summary>
            </member>
        <member name="F:PolyEngine.SerializableHashList`1.internalHashSet">
             <summary>
             The internal hash set.
             </summary>
            </member>
        <member name="P:PolyEngine.SerializableHashList`1.ElementType">
             <summary>
             Gets the type of the element.
             </summary>
             <value>The type of the element.</value>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.Add(`0)">
             <summary>
             Add the specified element.
             </summary>
             <param name="element">Element.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
             <summary>
             Add the specified element.
             </summary>
             <param name="element">Element.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
             <summary>
             Adds multiple elements, return how many record is added.
             </summary>
             <returns>The range.</returns>
             <param name="elements">Elements.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.Get(System.Int32)">
             <summary>
             Get the element by specified Index.
             </summary>
             <param name="Index">Index.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.Contains(`0)">
             <summary>
             If the hash set contains the specified element.
             </summary>
             <param name="element">Element.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.Clear">
             <summary>
             Clear all data
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.CopyTo(System.Collections.Generic.ICollection{`0})">
             <summary>
             Copies the data to destination.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.Remove(`0)">
             <summary>
             Remove the specified element.
             </summary>
             <param name="element">Element.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.RemoveAt(System.Int32)">
             <summary>
             Removes at Index.
             </summary>
             <returns>The <see cref="T:System.Boolean" />.</returns>
             <param name="Index">Index.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.GetCount">
             <summary>
             Gets the element count.
             </summary>
             <returns>The count.</returns>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.Initialize">
             <summary>
             Initialize this instance.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.GetEnumerator">
             <summary>
             Gets the enumerator.
             </summary>
             <returns>The enumerator.</returns>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Gets the enumerator.
             </summary>
             <returns>The enumerator.</returns>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.CopyTo(`0[],System.Int32)">
             <summary>
             Copies to array from arrayIndex.
             </summary>
             <param name="array">Array.</param>
             <param name="arrayIndex">Array index.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.System#Collections#Generic#IList{T}#IndexOf(`0)">
             <summary>
             gets index of item
             </summary>
             <returns>The of.</returns>
             <param name="item">Item.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
             <summary>
             gets index of item
             </summary>
             <returns>The of.</returns>
             <param name="item">Item.</param>
            </member>
        <member name="M:PolyEngine.SerializableHashList`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
             <summary>
             Insert the item at specified index.
             </summary>
             <param name="index">Index.</param>
             <param name="item">Item.</param>
            </member>
        <member name="P:PolyEngine.SerializableHashList`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
             <summary>
             Gets or sets the <see cref="!:PolyEngine.SerializableHashList`1" /> at the specified index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="T:PolyEngine.UltiDrawExt.serializeTransform">
             <summary>
             Serialize transform represent a full hierarchy transform node.
             </summary>
            </member>
        <member name="F:PolyEngine.UltiDrawExt.humanBonesTransformData">
             <summary>
             The human bones transform data.
             </summary>
            </member>
        <member name="F:PolyEngine.UltiDrawExt.dogBoneTransformData">
             <summary>
             The dog bones transform data.
             </summary>
            </member>
        <member name="F:PolyEngine.UltiDrawExt.humanBonesArrayTransform">
             <summary>
             a constant string represent human bone array transform, in the format of serializeTransform format.
             </summary>
            </member>
        <member name="M:PolyEngine.UltiDrawExt.DrawHumanSkeletonLine(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Draws a human skeleton.
             </summary>
             <param name="point">Point.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.UltiDrawExt.DrawMeshWireFrame(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Mesh,UnityEngine.Color)">
             <summary>
             Draws the mesh wire frame.
             </summary>
             <param name="point">Point.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="mesh">Mesh.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.UltiDrawExt.DrawHumanSkeleton(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Draws a human skeleton.
             </summary>
             <param name="point">Point.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.UltiDrawExt.DrawDogSkeletonLine(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Draws a dog skeleton line.
             </summary>
             <param name="point">Point.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.UltiDrawExt.DrawDogSkeleton(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Color)">
             <summary>
             Draws a dog skeleton.
             </summary>
             <param name="point">Point.</param>
             <param name="rotation">Rotation.</param>
             <param name="scale">Scale.</param>
             <param name="color">Color.</param>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleManager">
             <summary>
             Asset bundle manager.
             </summary>
             <summary>
             Asset bundle manager.
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.m_ResourceProtocol">
             <summary>
             The m access protocol.
             默认是 http
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.SetBaseDownloadingURLWithProtocol(PolyEngine.AssetBundles.AssetBundleManager.ResourceProtocol,System.String)">
             <summary>
             Sets the base downloading URL with protocol.
             设置下载路径和协议方式.
             </summary>
             <param name="protocol">Protocol.</param>
             <param name="url">URL.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.CopyBuiltinAssetBundleToPersistentFolder(System.String,System.String)">
             <summary>
             Copies the builtin asset bundle to persistent file path。
             从内置的 streaming asset bundle 拷贝文件到 Persistent File Path.
             </summary>
             <returns>The builtin asset bundle.</returns>
             <param name="streamingAssetRelativePath">Streaming asset relative path.</param>
             <param name="persistentPath">Persistent path.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.CopyStreamingAssetBundleToPersistentPath(System.String,System.String,PolyEngine.AssetBundles.CopyAssetBundleOperation)">
             <summary>
             Copies the streaming asset bundle to persistent path.
             把 Streaming Asset中的Asset Bundle 资源包copy到 persistent path 中。
             </summary>
             <returns>The streaming asset bundle to persistent path.</returns>
             <param name="streamingAssetRelativePath">Streaming asset relative path.相对于 StreamingAsset的相对路径.</param>
             <param name="persistentPath">Persistent path.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.CopyStreamingAssetToPath(System.String,System.String)">
             <summary>
             Copies the streaming asset to persistent.
             从 streaming asset 拷贝文件到 Persistent File Path路径。
             </summary>
             <returns>The streaming asset to persistent.</returns>
             <param name="srcFilePath">Source file path.</param>
             <param name="filePath">File path.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.CopyFileAsync(System.String,System.String,System.Int32)">
             <summary>
             Writes to file async in coroutine.
             </summary>
             <param name="buffer">Buffer.</param>
             <param name="blockSize">Block size.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.CopyURLResourcesAsync(System.String,System.String,System.Int32)">
             <summary>
             Copies the WWW async.
             </summary>
             <returns>The WWW async.</returns>
             <param name="url">URL.</param>
             <param name="fileDestPath">File destination path.</param>
             <param name="blockSize">Block size.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.IsBundleFullLoaded(System.String)">
             <summary>
             检查一个 bundle 及其依赖项目是否完全被加载？
             </summary>
             <returns><c>true</c> if is bundle full loaded the specified assetBundleName; otherwise, <c>false</c>.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.PreloadAssetBundle(System.String)">
             <summary>
             Pre-loads the asset bundle and its dependency
             加载资源包和依赖包。
             </summary>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="isLoadingDependency">If set to <c>true</c> is loading dependency.</param>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.m_AssetBundleConfigPathInResources">
             <summary>
             The asset bundle config path in resources folder.
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleManager.BundleCache">
             <summary>
             Bundle cache.
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.BundleCache.m_cache">
             <summary>
             此Bundle的缓存池。
             1级字典: Key = 类型, Value = 2级字典
             2级字典: Key = 对象名, Value = 对象
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.BundleCache.SafeLoad``1(System.String)">
             <summary>
             Safe loading the assets or using cache.
             从这个资源包中加载资源， 如果已经加载了，使用缓存。
             </summary>
             <returns><c>true</c>, if load was safed, <c>false</c> otherwise.</returns>
             <param name="assetPath">Asset path.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.m_BundleCacher">
             <summary>
             The asset bundle cacher.
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadOrUsingCache``1(UnityEngine.AssetBundle,System.String)">
             <summary>
             Loads the or using cache.
             读取assetbundle 获取从缓存池中重用。
             </summary>
             <param name="bundle">Bundle.</param>
             <param name="assetPath">Asset path.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.m_SimulateAssetBundleInEditor">
             <summary>
             The simulate asset bundle in editor.
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.kDefaultBundleConfigPath">
             <summary>
             constant : default asset bundle config path.
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.AssetBundleManager.AssetBundleConfigPathInResources">
             <summary>
             Gets or sets the asset bundle config path in resources folder.
             </summary>
             <value>The asset bundle config path in resources.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.AssetBundleManager.IsInitialized">
             <summary>
             Gets a value indicating whether this instance is initialized.
             </summary>
             <value>true</value>
             <c>false</c>
            </member>
        <member name="E:PolyEngine.AssetBundles.AssetBundleManager.OnInitializeComplete">
             <summary>
             Occurs when on initialize complete.
             </summary>
            </member>
        <member name="E:PolyEngine.AssetBundles.AssetBundleManager.OnLoadBundleError">
             <summary>
             event : load bundle error.
             string = bundle name
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleManager.OnInitialize">
             <summary>
             Called on initialize.
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadBundle(System.String)">
             <summary>
             Loads the bundle (异步)
             </summary>
             <returns>The bundle.</returns>
             <param name="assetBundle">Asset bundle.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadAsset``1(System.String,System.String)">
             <summary>
             Loads the asset.
             从 asset bundle name 中加载一个类型为 asset 的资源。
             注意: 调用这个方法的时候要确保 assetBundle 已经被加载 (使用 IsAssetBundleLoaded())。
             这个方法不会自动加载asset bundle。
             </summary>
             <returns>The asset.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadAsset(System.String,System.String,System.Type)">
             <summary>
             Loads the asset.
             从 asset bundle name 中加载一个类型为 asset 的资源。
             注意: 调用这个方法的时候要确保 assetBundle 已经被加载 (使用 IsAssetBundleLoaded())。
             这个方法不会自动加载asset bundle。
             </summary>
             <returns>The asset.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadAssetAsync``1(System.String,System.String)">
             <summary>
             Loads the asset async.
             异步加载资源.
             </summary>
             <returns>The asset async.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadAssetAsync(System.String,System.String,System.Type)">
             <summary>
             Loads the asset async.
             异步加载资源.
             </summary>
             <returns>The asset async.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.IsAssetBundleLoaded(System.String)">
             <summary>
             Determines whether this instance is bundle loaded the specified bundleName.
             </summary>
             <returns>true</returns>
             <c>false</c>
             <param name="bundleName">Bundle name.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.GetLoadedBundle(System.String)">
             <summary>
             Gets the loaded bundle.
             </summary>
             <returns>The loaded bundle.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.UnloadBundle(System.String,System.Boolean,System.Boolean)">
             <summary>
             Unloads the bundle.
             </summary>
             <param name="assetBundle">Asset bundle.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadAllAssets``1(System.String)">
             <summary>
             Loads all assets of the type.
             </summary>
             <returns>The all assets.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadScene(System.String,System.String)">
             <summary>
             Loads the scene.
             </summary>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="scene">Scene.</param>
             <returns>The scene.</returns>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.LoadAllAssetsAsync``1(System.String)">
             <summary>
             Loads all assets async.
             注意: 这个方法暂时不会放入缓存池， 请谨慎调用。 
             </summary>
             <returns>The all assets async.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleManager.ProcessAssetConfig(PolyEngine.AssetBundles.InstantiationAssetConfig)">
             <summary>
             Processes the asset config.
             接受并处理一份 asset config 资源配置清单。
             </summary>
             <returns>The asset config.</returns>
             <param name="assetConfig">Asset config.</param>
            </member>
        <member name="M:PolyEngine.BaseSerializableDictionary.GetCount">
             <summary>
             Gets the element count.
             </summary>
             <returns>The count.</returns>
            </member>
        <member name="T:PolyEngine.InputSystem.GazeInputModule">
             <summary>
             配合GazeRayEmitter使用的InputModule
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazeInputModule.Start">
             <summary>
             默认将GazeBaseInput注入m_InputOverride
             </summary>
            </member>
        <member name="T:PolyEngine.Enum2UnityObjectMapper">
             <summary>
             Enum mapper.
             快捷的把一个 枚举和一个 UnityEngine.Object 做匹配的帮助类.
             </summary>
            </member>
        <member name="F:PolyEngine.Enum2UnityObjectMapper.editorFoldout">
             <summary>
             The editor foldout.
             </summary>
            </member>
        <member name="M:PolyEngine.Enum2UnityObjectMapper.Get``1(System.Enum)">
             <summary>
             Gets value by _enum
             </summary>
             <param name="_enum">Enum.</param>
            </member>
        <member name="M:PolyEngine.Enum2UnityObjectMapper.Get``1(System.String)">
             <summary>
             Get the specified key.
             </summary>
             <param name="key">Key.</param>
            </member>
        <member name="M:PolyEngine.Enum2UnityObjectMapper.Get``1(System.Int32)">
             <summary>
             Get the specified key.
             </summary>
             <param name="key">Key.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.PETouch">
             <summary>
             Touch input system interface class.
             Internally work base on lean touch free version.
             Make sure this script's execution order is set to higher than default time.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouch.MoveThreshold">
             <summary>
             Gets or sets the pointer move threshold.
             When pointer movement &gt;= threshold, the pointer is considered moved.
             Threshold is measured in pixel.
             Default value = 0.1
             </summary>
             <value>The pointer move threshold.</value>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.GetTapCount(System.Boolean)">
             <summary>
             Gets the tap count of the current frame.
             </summary>
             <value>The tap count.</value>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.GetPointerCount(System.Boolean)">
             <summary>
             Gets the pointer count.
             If filterBlockedPointer = true, any pointer starts from UI object will be ignored.
             </summary>
             <returns>The pointer count.</returns>
             <param name="filterBlockedPointer">If set to <c>true</c> filter blocked pointer.</param>
            </member>
        <member name="F:PolyEngine.InputSystem.PETouch.m_taps">
             <summary>
             taps of the frame
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PETouch.m_pointers">
             <summary>
             The pointers of the frame.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouch.TapThresholdTime">
             <summary>
             Threshold time for tap operation.
             Default value = 1
             </summary>
             <value>The tap threshold time.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouch.LongHeldThresholdTime">
             <summary>
             Threshold time for long held press operation.
             Defualt value = 1.5
             </summary>
             <value>The press long held.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouch.ZoomGesture">
             <summary>
             Gets the default zoom gesture.
             </summary>
             <value>The zoom gesture.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouch.PanGesture">
             <summary>
             Gets the pan gesture.
             To perform pan gesture, user pan two fingers on screen, slip both fingers up/down vertically, toward one direction.
             </summary>
             <value>The pan gesture.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouch.RotateGesture">
             <summary>
             Gets the rotate gesture.
             </summary>
             <value>The rotate gesture.</value>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.filterBeganPointers">
             <summary>
             Handles the pointer at began state. This would invoke OnPressDown event.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.checkHeldPointer">
             <summary>
             handles the pointer at "held" state. This invokes the OnPressHeld event.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.checkTap">
             <summary>
             Handles tap operation. This invokes OnTap event.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.checkDefaultGestures">
             <summary>
             ticks the default gestures.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.GetTap(System.Int32,UnityEngine.Vector2@,System.Boolean)">
             <summary>
             Gets the tap and check if the tap position is overlapping to the unity event system.
             If filterBLockingPointer = true, only returns the unblocked blocking pointer.
             </summary>
             <returns><c>true</c>, if tap unoverlapped was gotten, <c>false</c> otherwise.</returns>
             <param name="index">Index.</param>
             <param name="position">Position.</param>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.GetPointer(System.Int32,PolyEngine.InputSystem.PointerInfo@,System.Boolean)">
             <summary>
             Gets the pointer at the index
             </summary>
             <returns><c>true</c>, if pointer was gotten, <c>false</c> otherwise.</returns>
             <param name="index">Index.</param>
             <param name="pointer">Pointer.</param>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouch.CheckBlocking(UnityEngine.Vector2)">
             <summary>
             Checks if UI raycaster is blocked at the touch point.
             </summary>
             <returns><c>true</c>, if blocking was checked, <c>false</c> otherwise.</returns>
             <param name="touchPoint">Touch point.</param>
            </member>
        <member name="E:PolyEngine.InputSystem.PETouch.OnTap">
             <summary>
             Event: on tap
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.PETouch.OnPointerBegan">
             <summary>
             Event: on pointer began
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.PETouch.OnPointerUpdate">
             <summary>
             Event: on pointer stay on device. Could be stationary or movement state.
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.PETouch.OnPointerLongStay">
             <summary>
             Event: on pointer long held
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.PETouch.OnPointerEnd">
             <summary>
             Event: on pointer end
             </summary>
            </member>
        <member name="T:PolyEngine.Animators.WaitExitState">
             <summary>
             Wait exit state.
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member F:PolyEngine.Animators.WaitExitState.TransitionPass-->
        <member name="F:PolyEngine.Animators.WaitExitState.FullStateNameHash">
             <summary>
             The full state name hash.
             </summary>
            </member>
        <member name="F:PolyEngine.Animators.WaitExitState.Animator">
             <summary>
             The animator.
             </summary>
            </member>
        <member name="F:PolyEngine.Animators.WaitExitState.Layer">
             <summary>
             The layer index.
             </summary>
            </member>
        <member name="M:PolyEngine.Animators.WaitExitState.#ctor(UnityEngine.Animator,System.String,System.Boolean,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Animators.WaitExitState" /> struct.
             </summary>
             <param name="animator">Animator.</param>
             <param name="StateName">State name.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="M:PolyEngine.Animators.WaitExitState.#ctor(UnityEngine.Animator,System.Int32,System.Boolean,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Animators.WaitExitState" /> struct.
             </summary>
             <param name="animator">Animator.</param>
             <param name="StateName">State name.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="M:PolyEngine.Animators.WaitExitState.Set(System.String,System.Boolean,System.Int32)">
             <summary>
             Set the specified FullStateName, TransitionFullyPass and Layer.
             </summary>
             <param name="FullStateName">Full state name.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="M:PolyEngine.Animators.WaitExitState.Set(System.Int32,System.Boolean,System.Int32)">
             <summary>
             Set the specified FullStateNameHash, TransitionFullyPass and Layer.
             </summary>
             <param name="FullStateNameHash">Full state name hash.</param>
             <param name="TransitionFullyPass">If set to <c>true</c> transition fully pass.</param>
             <param name="Layer">Layer.</param>
            </member>
        <member name="P:PolyEngine.Animators.WaitExitState.keepWaiting">
             <summary>
             Gets a value indicating whether this <see cref="T:PolyEngine.Animators.WaitForState" /> keep waiting.
             </summary>
             <value><c>true</c> if keep waiting; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:PolyEngine.I_PreviewableBehaviour.GetPreviewTitle">
             <summary>
             Gets the preview title.
             </summary>
             <returns>The preview title.</returns>
            </member>
        <member name="M:PolyEngine.I_PreviewableBehaviour.GetPreviewItems">
             <summary>
             Gets the preview items.
             </summary>
             <returns>The preview items.</returns>
            </member>
        <member name="F:PolyEngine.FPS.m_DisplayGUI">
             <summary>
             Display on IMGUI ?
             </summary>
            </member>
        <member name="F:PolyEngine.FPS.PEDrawText">
             <summary>
             The PE draw text flag.
             </summary>
            </member>
        <member name="T:PolyEngine.AnimatorSchedultMatchingTargetExt">
             <summary>
             Animator matching target extesion helper.
             </summary>
            </member>
        <member name="M:PolyEngine.AnimatorSchedultMatchingTargetExt.ScheduleMatchingTargetAtState(UnityEngine.Animator,System.String,UnityEngine.AvatarTarget,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.MatchTargetWeightMask,System.Nullable{System.Single},System.Single,System.Boolean,System.Boolean,System.Single)">
             <summary>
             Schedules matching target action when in target state.
             StartNormalizedTime indicates matching target starts at fixed start time or the enter state time.
             </summary>
             <param name="animator">Animator.</param>
             <param name="TargetStateFullName">Target state full path name.</param>
             <param name="StartNormalizedTime">Start normalized time.</param>
             <param name="EndNormalizedTime">End normalized time.</param>
             <param name="InterruptCurrentMatchingTarget">If set to <c>true</c> interrupt current matching target.</param>
             <param name="CompleteMatchingTarget">If set to <c>true</c> complete matching target.</param>
             <param name="delayTime">If delay time is set, the matching target action will start checking after delay time reach.</param>
            </member>
        <member name="M:PolyEngine.AnimatorSchedultMatchingTargetExt.ScheduleMatchingTargetAtState(UnityEngine.Animator,System.Int32,UnityEngine.AvatarTarget,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.MatchTargetWeightMask,System.Nullable{System.Single},System.Single,System.Boolean,System.Boolean,System.Single)">
             <summary>
             Schedules matching target action when in target state.
             StartNormalizedTime indicates matching target starts at fixed start time or the enter state time.
             </summary>
             <param name="animator">Animator.</param>
             <param name="TargetStateFullNameHash">Target state full path name hash.</param>
             <param name="StartNormalizedTime">Start normalized time.</param>
             <param name="EndNormalizedTime">End normalized time.</param>
             <param name="InterruptCurrentMatchingTarget">If set to <c>true</c> interrupt current matching target.</param>
             <param name="CompleteMatchingTarget">If set to <c>true</c> complete matching target.</param>
             <param name="delayTime">If delay time is set, the matching target action will start checking after delay time reach.</param>
            </member>
        <member name="M:PolyEngine.AnimatorSchedultMatchingTargetExt.CancelAllMatchingTargetSchedules(UnityEngine.Animator)">
             <summary>
             Cancel all match target schedules.
             </summary>
             <returns><c>true</c> if cancel all matching target schedules the specified animator; otherwise, <c>false</c>.</returns>
             <param name="animator">Animator.</param>
            </member>
        <member name="M:PolyEngine.AnimatorSchedultMatchingTargetExt.ScheduleMatchingTargetAtStatesOfTag(UnityEngine.Animator,System.String,UnityEngine.AvatarTarget,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.MatchTargetWeightMask,System.Nullable{System.Single},System.Single,System.Boolean,System.Boolean,System.Single)">
             <summary>
             Schedules matching target action when in target states of tag.
             StartNormalizedTime indicates matching target starts at fixed start time or the enter state time.
             </summary>
             <param name="animator">Animator.</param>
             <param name="TargetStateFullName">Target state full path name.</param>
             <param name="StartNormalizedTime">Start normalized time.</param>
             <param name="EndNormalizedTime">End normalized time.</param>
             <param name="InterruptCurrentMatchingTarget">If set to <c>true</c> interrupt current matching target.</param>
             <param name="CompleteMatchingTarget">If set to <c>true</c> complete matching target.</param>
             <param name="delayTime">If delay time is set, the matching target action will start checking after delay time reach.</param>
            </member>
        <member name="M:PolyEngine.AnimatorSchedultMatchingTargetExt.ScheduleMatchingTargetAtStatesOfTag(UnityEngine.Animator,System.Int32,UnityEngine.AvatarTarget,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.MatchTargetWeightMask,System.Nullable{System.Single},System.Single,System.Boolean,System.Boolean,System.Single)">
             <summary>
             Schedules matching target action when in target state of tag.
             StartNormalizedTime indicates matching target starts at fixed start time or the enter state time.
             </summary>
             <param name="animator">Animator.</param>
             <param name="TargetStateFullNameHash">Target state full path name hash.</param>
             <param name="StartNormalizedTime">Start normalized time.</param>
             <param name="EndNormalizedTime">End normalized time.</param>
             <param name="InterruptCurrentMatchingTarget">If set to <c>true</c> interrupt current matching target.</param>
             <param name="CompleteMatchingTarget">If set to <c>true</c> complete matching target.</param>
             <param name="delayTime">If delay time is set, the matching target action will start checking after delay time reach.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.ITouchProvider">
             <summary>
             Touch提供者接口，提供Touch数据
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ITouchProvider.TouchId">
             <summary>
             Touch id
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ITouchProvider.GetTouch">
             <summary>
             获取Touch
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundleListAttribute">
             <summary>
             Asset bundle list attribute.
             asset bundle 下拉菜单属性。 
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundleListAttribute.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.AssetBundleListAttribute" /> class.
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.InstantiationAssetConfig">
             <summary>
             Instantiation asset config.
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.InstantiationAssetConfig.JsonConfig">
             <summary>
             The asset config file in json format.
             一个 [InstantiationAssetConfig.AssetConfig] 格式的json文件
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.InstantiationAssetConfig.AssetConfig.InstantiateScriptableObjects">
             <summary>
             自动创建的ScriptableObject
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.InstantiationAssetConfig.AssetConfig.InstantiateGameObjects">
             <summary>
             自动创建的GameObject
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.PreloadBundles">
             <summary>
             自动加载的包
             </summary>
             <value>The preload bundles.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.InstantiateAllScriptableObjectsInBundle">
             <summary>
             自动创建此包中全部的ScriptableObject
             </summary>
             <value>The instantiate all scriptable objects in bundle.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.InstantiateAllGameObjectsInBundle">
             <summary>
             自动创建此包中全部的GameObject
             </summary>
             <value>The instantiate all game objects in bundle.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.InstantiateScriptableObjects">
             <summary>
             自动创建的ScriptableObject
             </summary>
             <value>The instantiate scriptable objects.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.InstantiateGameObjects">
             <summary>
             自动创建的GameObject
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.UnloadBundles">
             <summary>
             加载完场景后，需要释放的包。 
             </summary>
             <value>The unload bundles.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.InstantiationAssetConfig.IsDependencyEmpty">
             <summary>
             预加载资源是否为空?
             </summary>
             <value><c>true</c> if this instance is dependency empty; otherwise, <c>false</c>.</value>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncTransform">
             <summary>
             With this script your can sync transform between devices and editor handy. 
             Two modes: client --&gt; editor or revert.
             By default, client --&gt; editor.
             Base on unity network.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.SyncTransform.syncMode">
             <summary>
             Sync mode: client --&gt; server by default.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.SyncTransform.SyncTransformNetworkMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
             <summary>
             Deserialize the specified reader.
             </summary>
             <param name="reader">Reader.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.SyncTransform.SyncTransformNetworkMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
             <summary>
             Serialize the specified writer.
             </summary>
             <param name="writer">Writer.</param>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncTransform.SyncTransformDirectionNetworkMessage">
             <summary>
             Sync transform direction network message.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncTransform.SyncLocalScaleNetworkMessage">
             <summary>
             Sync transform direction network message.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.SyncTransform.ChangeSyncDirection(PolyEngine.UnityNetworking.SyncMode)">
             <summary>
             Changes the sync direction.
             </summary>
             <param name="syncMode">Sync mode.</param>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleLoader">
             <summary>
             资源加载器
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleLoader.m_AssetConfig">
             <summary>
             初始化资源的配置数据。 
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleLoader.onLoadCompleted">
             <summary>
             on load completed event.
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleLoader.LoadAssets">
             <summary>
             加载指定的资源。
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.ITouchInput">
             <summary>
             Touch input 接口，提供类似LeanFinger的输入
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ITouchInput.LastSet">
             <summary>
             上一帧是否触碰屏幕
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ITouchInput.Set">
             <summary>
             本帧是否触碰屏幕
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ITouchInput.Down">
             <summary>
             本帧是否按下
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ITouchInput.Up">
             <summary>
             本帧是否弹起
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.GeneralBaseInputInjecter">
             <summary>
             IBaseInputInjecter的一般实现
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GeneralBaseInputInjecter.Awake">
             <summary>
             将_baseInput注入m_InputOverride
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleScene">
             <summary>
             Asset bundle scene.
             定义包含在 AssetBundle中的Scene.
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.AssetBundleScene.IsAssetBundleScene">
             <summary>
             Gets or sets a value indicating whether this instance is asset bundle scene.
             </summary>
             <value><c>true</c> if this instance is asset bundle scene; otherwise, <c>false</c>.</value>
            </member>
        <member name="T:PolyEngine.AssetBundles.InstantiationAssetConfigExt">
             <summary>
             Instantiation asset config 的拓展方法， 控制其加载资源的行为.
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.InstantiationAssetConfigExt.Serialize(PolyEngine.AssetBundles.InstantiationAssetConfig,UnityEngine.TextAsset)">
             <summary>
             从 jsonConfig中序列化资源加载列表， 如果 jsonConfig == null ,则使用自带的资源列表配置文件。
             </summary>
             <param name="config">Config.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.InstantiationAssetConfigExt.SerializeToJsonConfig(PolyEngine.AssetBundles.InstantiationAssetConfig,UnityEngine.TextAsset)">
             <summary>
             Serializes to json config.
             保存到Json文件
             </summary>
             <param name="config">Config.</param>
            </member>
        <member name="T:PolyEngine.UnityNetworking.PEEmptyMessage">
             <summary>
             empty message.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.PEStringMessage">
             <summary>
             string message.
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.I_ZoomGesture">
             <summary>
             Interface : gets the zoom scale, measured in pixel space.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.I_ZoomGesture.ZoomScale">
             <summary>
             Gets the zoom scale, measured in pixel space.
             </summary>
             <value>The pan scale.</value>
            </member>
        <member name="E:PolyEngine.InputSystem.I_ZoomGesture.OnZoom">
             <summary>
             Events fired when zoom gesture is performed by user.
             </summary>
            </member>
        <member name="T:PolyEngine.SceneExtension">
             <summary>
             Scene extension.
             </summary>
            </member>
        <member name="M:PolyEngine.SceneExtension.FindComponentsOfTypeInScene``1(UnityEngine.SceneManagement.Scene)">
             <summary>
             Finds the objects of type in scene.
             </summary>
             <param name="scene">Scene.</param>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncDirectionNetworkMessage">
             <summary>
             Sync network monobehaviour message.
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.I_Touch">
             <summary>
             Interface for accessing touch input system.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.I_Touch.MoveThreshold">
             <summary>
             Gets or sets the pointer move threshold.
             When pointer movement &gt;= threshold, the pointer is considered moved.
             Threshold is measured in pixel.
             Default value = 0.1
             </summary>
             <value>The pointer move threshold.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.I_Touch.LongHeldThresholdTime">
             <summary>
             Threshold time for long held press operation.
             Defualt value = 1.5
             </summary>
             <value>The press long held.</value>
            </member>
        <member name="M:PolyEngine.InputSystem.I_Touch.GetPointerCount(System.Boolean)">
             <summary>
             Gets the pointer count.
             ignoreUIPointer : set flags to ignore pointer began on UI gameObject.
             </summary>
             <param name="ignoreUIPointer">If set to <c>true</c> ignore user interface pointer.</param>
            </member>
        <member name="M:PolyEngine.InputSystem.I_Touch.GetPointer(System.Int32,PolyEngine.InputSystem.PointerInfo@,System.Boolean)">
             <summary>
             Gets the pointer info at the index.
             </summary>
             <returns>The pointer.</returns>
             <param name="Index">Index.</param>
            </member>
        <member name="E:PolyEngine.InputSystem.I_Touch.OnTap">
             <summary>
             Event : on touch tap.
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.I_Touch.OnPointerBegan">
             <summary>
             Event : on pointer began touch.
             This is called at the frame touch lay on screen.
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.I_Touch.OnPointerUpdate">
             <summary>
             Event : on pointer update.
             This is called per frame as long as the pointer is touching on screen.
             It's not called on pointer begin frame and end frame.
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.I_Touch.OnPointerEnd">
             <summary>
             Event : on pointer ends.
             This is called at the frame touch leaves screen.
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.I_Touch.OnPointerLongStay">
             <summary>
             Event : on pointer long stay.
             This is called once per pointer during its life cycle.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.I_Touch.PanGesture">
             <summary>
             Gets the pan gesture interface.
             </summary>
             <value>The pan gesture.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.I_Touch.ZoomGesture">
             <summary>
             Gets the zoom gesture.
             </summary>
             <value>The zoom gesture.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.I_Touch.RotateGesture">
             <summary>
             Gets the rotate gesture.
             </summary>
             <value>The rotate gesture.</value>
            </member>
        <member name="T:PolyEngine.InputSystem.GazeGraphicRayEmitter">
             <summary>
             基于Graphic检测的GazeRayEmitter
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazeGraphicRayEmitter.OnEnable">
             <summary>
             AddProvider
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazeGraphicRayEmitter.OnDisable">
             <summary>
             RemoveProvider
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazeGraphicRayEmitter.Update">
             <summary>
             当前做法是在Update中更新UI碰撞结果
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazeGraphicRayEmitter.RaycastGraphics(UnityEngine.Ray,System.Collections.Generic.List{UnityEngine.UI.Graphic},System.Single,UnityEngine.LayerMask,UnityEngine.UI.Graphic@,System.Single@,System.Boolean)">
             <summary>
             检测GraphicList的UI碰撞
             </summary>
             <param name="ray">Ray</param>
             <param name="checkGraphics">GraphicList</param>
             <param name="maxDistance">最大检测距离</param>
             <param name="eventMask">检测的Layer层</param>
             <param name="hitGraphic">碰撞到的Graphic，若有</param>
             <param name="hitDistance">碰撞距离，若有</param>
             <param name="ignoreReversedGraphic">是否忽略背向的Graphic</param>
             <returns>是否碰撞到</returns>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleLoadAssetsOperation">
             <summary>
             Asset bundle load assets operation.
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleLoadAssetsOperation.Update">
             <summary>
             返回 true 代表需要继续 Update(). 
             返回 false 代表 IsDone
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.I_AssetBundleManager">
             <summary>
             Interface: Asset bundle manager 
             管理所有的asset bundle 资源加载和使用的管理类。
             </summary>
            </member>
        <member name="E:PolyEngine.AssetBundles.I_AssetBundleManager.OnInitializeComplete">
             <summary>
             Occurs when on initialize complete.
             </summary>
            </member>
        <member name="E:PolyEngine.AssetBundles.I_AssetBundleManager.OnLoadBundleSuccessfully">
             <summary>
             event : load bundle 
             string = bundle name
             </summary>
            </member>
        <member name="E:PolyEngine.AssetBundles.I_AssetBundleManager.OnLoadBundleError">
             <summary>
             event: load bundle error.
             string = bundle name
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.I_AssetBundleManager.IsInitialized">
             <summary>
             AssetBundleManager在启动后会自动初始化资源。
             </summary>
             <value><c>true</c> if this instance is initialized; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.IsAssetBundleLoaded(System.String)">
             <summary>
             Determines whether this instance is bundle loaded the specified bundleName.
             </summary>
             <returns><c>true</c> if this instance is bundle loaded the specified bundleName; otherwise, <c>false</c>.</returns>
             <param name="bundleName">Bundle name.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadBundle(System.String)">
             <summary>
             Loads the bundle (异步), 如果资源包已经加载，则返回缓存的包
             </summary>
             <returns>The bundle.</returns>
             <param name="assetBundle">Asset bundle.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.UnloadBundle(System.String,System.Boolean,System.Boolean)">
             <summary>
             Unloads the bundle.
             </summary>
             <param name="assetBundle">Asset bundle.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadAsset``1(System.String,System.String)">
             <summary>
             Loads the asset.
             从 asset bundle name 中加载一个类型为 asset 的资源。
             注意: 调用这个方法的时候要确保 assetBundle 已经被加载 (使用 IsAssetBundleLoaded())。
             这个方法不会自动加载asset bundle。
             </summary>
             <returns>The asset.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadAssetAsync``1(System.String,System.String)">
             <summary>
             Loads the asset async.
             异步加载资源.
             </summary>
             <returns>The asset async.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadAssetAsync(System.String,System.String,System.Type)">
             <summary>
             Loads the asset async.
             异步加载资源.
             </summary>
             <returns>The asset async.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="asset">Asset.</param>
             <param name="assetType">Asset type.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadAllAssets``1(System.String)">
             <summary>
             Loads all assets of the type.
             这是一个同步方法 。
             </summary>
             <returns>The all assets.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadAllAssetsAsync``1(System.String)">
             <summary>
             Loads all assets async.
             </summary>
             <returns>The all assets async.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.GetLoadedBundle(System.String)">
             <summary>
             Gets the loaded bundle.
             </summary>
             <returns>The loaded bundle.</returns>
             <param name="assetBundleName">Asset bundle name.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.LoadScene(System.String,System.String)">
             <summary>
             Loads the scene.
             </summary>
             <param name="assetBundleName">Asset bundle name.</param>
             <param name="scene">Scene.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.I_AssetBundleManager.ProcessAssetConfig(PolyEngine.AssetBundles.InstantiationAssetConfig)">
             <summary>
             Processes the asset config.
             接受并处理一份 asset config 资源配置清单。
             </summary>
             <returns>The asset config.</returns>
             <param name="assetConfig">Asset config.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.RotateGesture">
             <summary>
             Rotate gesture : user put two fingers on screen, yaw around one single point.
             </summary>
            </member>
        <member name="E:PolyEngine.InputSystem.RotateGesture.OnRotate">
             <summary>
             Events fired when rotate gesture is performed by user.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.RotateGesture.IsPerforming">
             <summary>
             Is the gesture currently performed by user ?
             </summary>
             <value>true</value>
             <c>false</c>
            </member>
        <member name="P:PolyEngine.InputSystem.RotateGesture.RotateAngle">
             <summary>
             Gets the rotate scale, measured in pixel space.
             For clockwise rotation, scale is positive, else is negative.
             </summary>
             <value>The pan scale.</value>
            </member>
        <member name="T:PolyEngine.InputSystem.I_PanGesture">
             <summary>
             Interface : Pan gesture.
             To perform pan gesture, user pan two fingers on screen, slip both fingers up/down vertically, toward one direction.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.I_PanGesture.PanScale">
             <summary>
             Gets the pan scale, measured in pixel space.
             </summary>
             <value>The pan scale.</value>
            </member>
        <member name="E:PolyEngine.InputSystem.I_PanGesture.OnPan">
             <summary>
             Event fired when pan gesture is performed.
             </summary>
            </member>
        <member name="T:PolyEngine.RefAction`1">
             <summary>
             Action supports reference type of one paremters
             </summary>
            </member>
        <member name="T:PolyEngine.RefAction`2">
             <summary>
             Action supports reference type of two parameters
             </summary>
            </member>
        <member name="T:PolyEngine.RefAction`3">
             <summary>
             Action supports reference type of three parameters
             </summary>
            </member>
        <member name="T:PolyEngine.RefAction`4">
             <summary>
             Action supports reference type of four parameters
             </summary>
            </member>
        <member name="T:PolyEngine.RefAction`5">
             <summary>
             Action supports reference type of five parameters
             </summary>
            </member>
        <member name="T:PolyEngine.AnimationCurveExtension">
             <summary>
             Animation curve extension.
             </summary>
            </member>
        <member name="M:PolyEngine.AnimationCurveExtension.Serialize(UnityEngine.AnimationCurve,UnityEngine.Networking.NetworkWriter)">
             <summary>
             Serializes to network writer.
             </summary>
             <param name="curve">Curve.</param>
             <param name="writer">Writer.</param>
            </member>
        <member name="M:PolyEngine.AnimationCurveExtension.Truncate(UnityEngine.AnimationCurve,System.Single,System.Single,System.Boolean)">
             <summary>
             Truncate the specified curve, fromTime and toTime , and return the turncated curve.
             If resetStartTime = true,
             </summary>
             <param name="curve">Curve.</param>
             <param name="fromTime">From time.</param>
             <param name="toTime">To time.</param>
             <param name="resetStartTime">If set to <c>true</c> reset start time.</param>
            </member>
        <member name="T:PolyEngine.UnityNetworking.BulkContentSyncBehaviour">
             <summary>
             Bulk content sync: a network util script to send bulk contents in a set of packets.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.SetSingleton">
             <summary>
             Sets the singleton.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentYieldInstruction">
             <summary>
             Bulk content yield instruction.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentYieldInstruction.ResetSignal">
             <summary>
             Call for reset signal.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentYieldInstruction.Set">
             <summary>
             Sets signal.
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentYieldInstruction.keepWaiting">
             <summary>
             Gets a value indicating whether this
             <see cref="!:PolyEngine.UnityNetworking.BulkContentSync+BulkContentYieldInstruction" /> keep waiting.
             </summary>
             <value><c>true</c> if keep waiting; otherwise, <c>false</c>.</value>
            </member>
        <member name="T:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentMessage">
             <summary>
             Network message to transfer bulk bytes
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentMessage.packetIndex">
             <summary>
             The index of the current packet.
             File content starts from 0.
             For index = -1, means transition begins.
             For index = -2, means transition ends.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentMessage.kMaxBytesPerPack">
             <summary>
             the size of total bytes of each packet.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.BulkContentMessage.packetTotal">
             <summary>
             The total count of packet.
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.ContentID">
             <summary>
             Gets or sets the content ID.
             </summary>
             <value>The content I.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.ContentBuffer">
             <summary>
             Gets or sets the content buffer.
             By setting this property you assign the content to transfer via network.
             </summary>
             <value>The content buffer.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.FragmentSize">
             <summary>
             Gets or sets the size of the fragment packet.
             </summary>
             <value>The size of the fragment.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.Timeout">
             <summary>
             Gets or sets the timeout for network message sync.
             </summary>
             <value>The timeout.</value>
            </member>
        <member name="E:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnServerTransitionBegin">
             <summary>
             event: transition begins. This event is called before actually sending anything.
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnServerTransitionUpdate">
             <summary>
             event: update trnsition info in normalized progress.
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnServerTransitionDone">
             <summary>
             event: on transition ends (server-side).
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnServerTransitionError">
             <summary>
             event: on transition error;
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnClientRecvBulkContent">
             <summary>
             Event is called after client sucessfully receive bulk content.
             Called on client application only.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.Send">
             <summary>
             Start sending contents.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.ServerSendFile">
             <summary>
             Server: send file via network.
             </summary>
             <returns>The send file.</returns>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnClientRecvContent(UnityEngine.Networking.NetworkMessage)">
             <summary>
             Network event : on receive content message
             </summary>
             <param name="netMsg">Net message.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnClientTransitionBegin(UnityEngine.Networking.NetworkMessage)">
             <summary>
             Network event : on client, transition begins.
             </summary>
             <param name="netMsg">Net message.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnClientTransitionEnd(UnityEngine.Networking.NetworkMessage)">
             <summary>
             Network event : on client, transition ends.
             </summary>
             <param name="netMsg">Net message.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.BulkContentSyncBehaviour.OnServerRecvResponse(UnityEngine.Networking.NetworkMessage)">
             <summary>
             Network event : on server receive client response.
             </summary>
             <param name="netMsg">Net message.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.TapInfo">
             <summary>
             Tap input data wrapper.
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleInfo">
             <summary>
             Asset bundle info.
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleInfo.RelativePath">
             <summary>
             The relative path.
             Bundle相对StreamingAssets的相对路径. 例如: AssetsBundle/iOS
             </summary>
            </member>
        <member name="T:PolyEngine.SingletonMonobehaviour`1">
             <summary>
             Singleton monobehavior.
             </summary>
            </member>
        <member name="M:PolyEngine.SingletonMonobehaviour`1.HasInstance">
             <summary>
             判断 单例对象是否有调用成功。
             </summary>
             <returns><c>true</c> if has instance; otherwise, <c>false</c>.</returns>
            </member>
        <member name="P:PolyEngine.SingletonMonobehaviour`1.Instance">
             <summary>
             获取一个singleton behavior 的单例对象引用。 
             注意: 这个方法会调用 FindObjectsOfType, 如果只是为了得知 instance 是否有创建成功，请调用 HasInstance()
             </summary>
             <value>The instance.</value>
            </member>
        <member name="M:PolyEngine.SingletonMonobehaviour`1.SetSingleton">
             <summary>
             Sets the singleton.
             </summary>
            </member>
        <member name="T:PolyEngine.Pooling.Pool">
             <summary>
             A simple pool for gameObject.
             </summary>
            </member>
        <member name="F:PolyEngine.Pooling.Pool.m_Active_vInstanceID_kPoolEntity">
             <summary>
             Pool for active game object.
             key = prefab.
             value = instances pool.
             </summary>
            </member>
        <member name="F:PolyEngine.Pooling.Pool.m_InstanceMapping">
             <summary>
             Pool for instance - prefab mapping.
             Key = instance .
             Value = prefab
             </summary>
            </member>
        <member name="M:PolyEngine.Pooling.Pool.Get(UnityEngine.GameObject,UnityEngine.GameObject@)">
             <summary>
             Gets a pool from specified instanceid.
             If gets a pooled object, return true.
             else return false .
             </summary>
             <param name="instanceid">Instanceid.</param>
            </member>
        <member name="M:PolyEngine.Pooling.Pool.PushIntoPool(UnityEngine.GameObject,System.Int32,System.Boolean)">
             <summary>
             Adds [InstanceCount] instance from the prefab to the pool.
             OnlyAddsForFirstTime : if true, only adds the instances when the instance pool not exists.
             </summary>
             <param name="prefab">Prefab.</param>
             <param name="InstanceCount">Instance count.</param>
            </member>
        <member name="M:PolyEngine.Pooling.Pool.Spawn(UnityEngine.GameObject,System.Nullable{UnityEngine.Vector3},System.Nullable{UnityEngine.Quaternion})">
             <summary>
             Spawn a prefab. Prefab could be pooled or instantianted. 
             If position or rotation is not null, transform will be set, otherwise no action is taken on transform.
             </summary>
             <param name="prefab">Prefab.</param>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.Pooling.Pool.Spawn(UnityEngine.GameObject,UnityEngine.GameObject@,System.Nullable{UnityEngine.Vector3},System.Nullable{UnityEngine.Quaternion})">
             <summary>
             Spawn a prefab. Prefab could be pooled or instantianted. 
             Return true if the prefab is spawned from pool, otherwise return false.
             If position or rotation is not null, transform will be set, otherwise no action is taken on transform.
             </summary>
             <param name="prefab">Prefab.</param>
             <param name="instance">Instance.</param>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.Pooling.Pool.Unspawn(UnityEngine.GameObject)">
             <summary>
             Unspawn the specified instance, if the instance is a pooled object, will be redeemed to pool and be set deactive, else will be destroyed immediately.
             </summary>
             <param name="instance">Instance.</param>
            </member>
        <member name="T:PolyEngine.SectionAttribute">
             <summary>
             Section attribute.
             定义字段的归类。
             </summary>
            </member>
        <member name="T:PolyEngine.I_Singleton">
             <summary>
             代表一个单例对象。
             </summary>
            </member>
        <member name="M:PolyEngine.I_Singleton.SetSingleton">
             <summary>
             Sets the singleton.
             </summary>
            </member>
        <member name="T:PolyEngine.SerializableDictionary`2">
             <summary>
             Serializable dictionary, implement this class with specific key and value.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.#ctor(`0[],`1[])">
             <summary>
             construct with default keys and values
             </summary>
             <param name="defaultKeys">Default keys.</param>
             <param name="defaultValues">Default values.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.GetCount">
             <summary>
             Gets the element count.
             </summary>
             <returns>The count.</returns>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.KeyType">
             <summary>
             Gets the type of the key.
             </summary>
             <value>The type of the key.</value>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.ValueType">
             <summary>
             Gets the type of the value.
             </summary>
             <value>The type of the value.</value>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Add(`0,`1)">
             <summary>
             Add the specified key and value.
             If duplicated key exists, return false. Else return true for adding element successfully.
             </summary>
             <param name="key">Key.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Clear">
             <summary>
             Clear this dict.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.ContainsKey(`0)">
             <summary>
             If the dict containses the key.
             </summary>
             <returns><c>true</c>, if key was containsed, <c>false</c> otherwise.</returns>
             <param name="key">Key.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.ContainsValue(`1)">
             <summary>
             If the dict containses the value.
             </summary>
             <returns><c>true</c>, if value was containsed, <c>false</c> otherwise.</returns>
             <param name="value">Value.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.CopyTo(System.Collections.Generic.IDictionary{`0,`1},System.Boolean)">
             <summary>
             Copies to target dict
             </summary>
             <param name="dict">Dict.</param>
             <param name="clearDictBeforeCopy">If set to <c>true</c> clear dict before copy.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.CopyFrom(System.Collections.Generic.IDictionary{`0,`1})">
             <summary>
             Copies from dict.
             This operation cause the existing data being cleaned before coping data.
             </summary>
             <param name="dict">Dict.</param>
             <param name="clearDictBeforeCopy">If set to <c>true</c> clear dict before copy.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Get(`0)">
             <summary>
             gets value by key.
             </summary>
             <param name="key">Key.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Get(System.Int32,`0@,`1@)">
             <summary>
             Get the key and value at the index.
             </summary>
             <param name="index">Index.</param>
             <param name="key">Key.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.TryGetValue(`0,`1@)">
             <summary>
             Tries to get value by key.
             </summary>
             <returns><c>true</c>, if get was tryed, <c>false</c> otherwise.</returns>
             <param name="key">Key.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Set(`0,`1)">
             <summary>
             Sets the value mapped by key.
             </summary>
             <param name="key">Key.</param>
             <param name="value">Value.</param>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.Item(`0)">
             <summary>
             Gets value by key.
             </summary>
             <param name="key">Key.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Remove(`0)">
             <summary>
             Remove the specified key.
             </summary>
             <param name="k">K.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.CheckKeyNull(System.Int32)">
             <summary>
             Checks if the key at the index is null.
             </summary>
             <returns><c>true</c>, if key null was checked, <c>false</c> otherwise.</returns>
             <param name="index">Index.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.CheckValueNull(System.Int32)">
             <summary>
             Checks the value null.
             </summary>
             <returns><c>true</c>, if value null was checked, <c>false</c> otherwise.</returns>
             <param name="index">Index.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.RemoveNullKeys">
             <summary>
             Removes the null key and value at that index. where key == NULL.
             Return remove element count.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.RemoveNullValues">
             <summary>
             Removes the null key and value at that index, where value == NULL.
             Return remove element count.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.RemoveNullKeysAndValues">
             <summary>
             Removes the null key and value at that index, where value or key == NULL.
             Return remove element count.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.Initialize">
             <summary>
             Initialize the internal dictionary instance.
             </summary>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.GetValuesEnumerator">
             <summary>
             Gets the values enumerator.
             </summary>
             <returns>The value enumerator.</returns>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.GetKeysEnumerator">
             <summary>
             Gets the keys enumerator.
             </summary>
             <returns>The value enumerator.</returns>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.AddElement(System.Object,System.Object)">
             <summary>
             Adds the element.
             </summary>
             <param name="k">K.</param>
             <param name="v">V.</param>
             <returns><c>true</c>, if element was added, <c>false</c> otherwise.</returns>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.DeleteElement(System.Object)">
             <summary>
             Deletes the element.
             </summary>
             <returns>true</returns>
             <c>false</c>
             <param name="k">K.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.DeleteElementAtIndex(System.Int32)">
             <summary>
             Deletes the element at the index.
             </summary>
             <returns>true</returns>
             <c>false</c>
             <param name="index">Index.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{K,V}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
             <summary>
             Add the specified item.
             </summary>
             <param name="item">Item.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#Generic#IDictionary{K,V}#Add(`0,`1)">
             <summary>
             Add the specified item.
             </summary>
             <param name="item">Item.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{K,V}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
             <summary>
             Contains the specified item.
             </summary>
             <param name="item">Item.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{K,V}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
             <summary>
             Copies to target array.
             </summary>
             <param name="array">Array.</param>
             <param name="arrayIndex">Array index.</param>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{K,V}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
             <summary>
             Remove the specified item.
             </summary>
             <param name="item">Item.</param>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{K,V}}#Count">
             <summary>
             Gets the count.
             </summary>
             <value>The count.</value>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{K,V}}#IsReadOnly">
             <summary>
             Gets a value indicating whether this instance is read only.
             </summary>
             <value><c>true</c> if this instance is read only; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{K,V}}#GetEnumerator">
             <summary>
             Gets the enumerator.
             </summary>
             <returns>The enumerator.</returns>
            </member>
        <member name="M:PolyEngine.SerializableDictionary`2.System#Collections#IEnumerable#GetEnumerator">
             <summary>
             Gets the enumerator.
             </summary>
             <returns>The enumerator.</returns>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.System#Collections#Generic#IDictionary{K,V}#Keys">
             <summary>
             Gets the keys.
             </summary>
             <value>The keys.</value>
            </member>
        <member name="P:PolyEngine.SerializableDictionary`2.System#Collections#Generic#IDictionary{K,V}#Values">
             <summary>
             Gets the values.
             </summary>
             <value>The values.</value>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleReferenceItem.AssetBundleName">
             <summary>
             The name of the asset bundle.
             asset bundle的 名字。
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleReferenceItem.AssetFullName">
             <summary>
             The asset full name.
             在 Asset Bundle 中的资源。
             注意： 这个变量包含了资源的后缀, 例如.mp3, .prefab, .png, 在运行时加载的时候， 不要使用这个变量而应该使用 AssetName
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.AssetBundleReferenceItem.assetFullName">
             <summary>
             Gets the asset path.
             资源的完整路径， 包含有 .mp3, .png这样的后缀名。 
             </summary>
             <value>The asset path.</value>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleReferenceItem.AssetName">
             <summary>
             The name of the asset.
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.AssetBundleReferenceItem.assetName">
             <summary>
             Gets the name of the asset.
             不含有.mp3, .png 这样的后缀名.
             </summary>
             <value>The name of the asset.</value>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleReference`1">
             <summary>
             Asset bundle reference.
             Asset Bundle 引用字段， 定义一个对象的Asset Bundle 的名字和具体的资源名。
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleReference`1.LoadAsset">
             <summary>
             Loads the asset from asset bundle。
             从指定的AssetBundle中加载资源。 如果asset bundle没有读取， 则返回Null。
             注意: 这个方法返回的对象是指向 AssetBundle 资源包中的对象， 所以应该用于[只读]的用途。
             当 AssetBundle.UnloadAsset(true) 调用的时候， 返回的对象会被销毁。
             </summary>
             <returns>The asset.</returns>
            </member>
        <member name="T:PolyEngine.NullableSingle">
             <summary>
             Nullable single value type.
             </summary>
            </member>
        <member name="M:PolyEngine.NullableSingle.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableInt">
             <summary>
             Nullable int value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableInt.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableUint">
             <summary>
             Nullable unsigned-int value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableUint.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableBoolean">
             <summary>
             Nullable bool value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableBoolean.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableByte">
             <summary>
             Nullable unsigned-byte value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableByte.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableSbyte">
             <summary>
             Nullable signed-byte value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableSbyte.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableShort">
             <summary>
             Nullable short value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableShort.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableUshort">
             <summary>
             Nullable unsigned-short value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableUshort.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableQuaternion">
             <summary>
             Nullable Quaternion value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableQuaternion.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableVector2">
             <summary>
             Nullable Vector2 value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableVector2.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableVector2Int">
             <summary>
             Nullable Vector2Int value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableVector2Int.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableVector3">
             <summary>
             Nullable Vector3 value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableVector3.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableVector3Int">
             <summary>
             Nullable Vector3Int value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableVector3Int.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableVector4">
             <summary>
             Nullable Vector4 value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableVector4.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.NullableVector4Int">
             <summary>
             Nullable Vector4Int value type
             </summary>
            </member>
        <member name="M:PolyEngine.NullableVector4Int.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.MeshExtension">
             <summary>
             Mesh extension.
             </summary>
            </member>
        <member name="M:PolyEngine.MeshExtension.Serialize(UnityEngine.Mesh,System.Byte[]@)">
             <summary>
             Serialize a mesh to bytes.
             </summary>
             <param name="mesh">Mesh.</param>
             <param name="buffer">Buffer.</param>
            </member>
        <member name="M:PolyEngine.MeshExtension.ReadInt(System.Byte[],System.Int32,System.Int32@)">
             <summary>
             Reads a int from buffer, return next index and output read integer value.
             </summary>
             <returns>The int.</returns>
             <param name="buffer">Buffer.</param>
             <param name="index">Index.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:PolyEngine.MeshExtension.ReadSingle(System.Byte[],System.Int32,System.Single@)">
             <summary>
             Reads a float from buffer, return next index and output read float value.
             </summary>
             <returns>The int.</returns>
             <param name="buffer">Buffer.</param>
             <param name="index">Index.</param>
             <param name="value">Value.</param>
            </member>
        <member name="M:PolyEngine.MeshExtension.Deserialize(UnityEngine.Mesh,System.Byte[])">
             <summary>
             Deserialize the specified mesh from buffer.
             </summary>
             <param name="mesh">Mesh.</param>
             <param name="buffer">Buffer.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.IGraphicCollider">
             <summary>
             GraphicCollider接口，提供用于碰撞检测的Graphic
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.IGraphicCollider.GetGraphic">
             <summary>
             Collide graphic
             </summary>
             <returns>Graphic</returns>
            </member>
        <member name="T:PolyEngine.AssetBundles.ProcessBundleConfigOperation">
             <summary>
             Process bundle config operation.
             异步处理一个 Asset Bundle Config 配置文件的类。 
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.ProcessBundleConfigOperation.TotalInstantiatedGameObject">
             <summary>
             Gets the total instantiated game object.
             </summary>
             <value>The total instantiated game object.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.ProcessBundleConfigOperation.TotalInstantiatedScriptableObject">
             <summary>
             Gets the total instantiated scriptable object.
             </summary>
             <value>The total instantiated scriptable object.</value>
            </member>
        <member name="P:PolyEngine.AssetBundles.ProcessBundleConfigOperation.TotalLoadedBundle">
             <summary>
             Gets the total loaded bundle.
             </summary>
             <value>The total loaded bundle.</value>
            </member>
        <member name="M:PolyEngine.AssetBundles.ProcessBundleConfigOperation.SetDone">
             <summary>
             设置完成。
             这个方法只有 AssetBundleManager 调用。
             </summary>
            </member>
        <member name="M:PolyEngine.BoundsUtility.GetBoundsIncludeChildren(UnityEngine.GameObject)">
             <summary>
             Gets the bounds include children.
             </summary>
             <returns>The bounds include children.</returns>
             <param name="targetObject">Target object.</param>
            </member>
        <member name="M:PolyEngine.BoundsUtility.GetRenderBounds(UnityEngine.GameObject)">
             <summary>
             Gets the render bounds.
             </summary>
             <returns>The render bounds.</returns>
             <param name="objeto">Objeto.</param>
            </member>
        <member name="T:PolyEngine.BaseSerializableHashList">
             <summary>
             Base serializable hash list.
             </summary>
            </member>
        <member name="M:PolyEngine.BaseSerializableHashList.GetCount">
             <summary>
             Gets the element count.
             </summary>
             <returns>The count.</returns>
            </member>
        <member name="T:PolyEngine.SceneObjectDropDownAttribute">
             <summary>
             Scene object drop down attribute.
             在一个 string 字段上创建下拉菜单。 下拉菜单的内容是Scene中的对应类型的对象下拉列表。
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.I_RotateGesture">
             <summary>
             Rotate gesture : user put two fingers on screen, yaw around one single point.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.I_RotateGesture.RotateAngle">
             <summary>
             Gets the rotate angle.
             For clockwise rotation, scale is positive, else is negative.
             </summary>
             <value>The pan scale.</value>
            </member>
        <member name="E:PolyEngine.InputSystem.I_RotateGesture.OnRotate">
             <summary>
             Events fired when rotate gesture is performed by user.
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.PanGesture">
             <summary>
             Pan gesture.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PanGesture.Tick">
             <summary>
             Tick this instance.
             To perform pan gesture, user pan two fingers on screen, slip both fingers up/down vertically, toward one direction.
             Finger slipping upwards (Y &gt; 0) : pan scale is positive, else pan scale is negative.
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.PanGesture.PanScale">
             <summary>
             Gets the pan scale, measured in pixel space.
             </summary>
             <value>The pan scale.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PanGesture.IsPerforming">
             <summary>
             Is the gesture currently performed by user ?
             </summary>
             <value>true</value>
             <c>false</c>
            </member>
        <member name="T:PolyEngine.GazeRaycaster">
             <summary>
             Usually this script is put on main camera, but you can put it on random marker controller for a custom raycasting behaviour.
             </summary>
            </member>
        <member name="P:PolyEngine.GazeRaycaster.cullingMask">
             <summary>
             Gets or sets the raycast culling mask.
             Only raycast with colliders which falls in this mask.
             </summary>
             <value>The event mask.</value>
            </member>
        <member name="M:PolyEngine.GazeRaycaster.Raycast(UnityEngine.EventSystems.PointerEventData,System.Collections.Generic.List{UnityEngine.EventSystems.RaycastResult})">
             <summary>
             Raycast the specified eventData and resultAppendList.
             </summary>
             <param name="eventData">Event data.</param>
             <param name="resultAppendList">Result append list.</param>
            </member>
        <member name="P:PolyEngine.GazeRaycaster.eventCamera">
             <summary>
             Gets the event camera.
             </summary>
             <value>The event camera.</value>
            </member>
        <member name="E:PolyEngine.UnityNetworking.NetworkEvent.OnClientIsConnected">
             <summary>
             Event: client is connected.
             This event is called on client application.
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.NetworkEvent.OnClientIsDisconnected">
             <summary>
             Event: client is disconnected
             This event is called on client application.
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.NetworkEvent.OnServerStarted">
             <summary>
             Event: start is started.
             This event is called on server application.
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.NetworkEvent.OnServerIsConnected">
             <summary>
             Event: server is connected with a client.
             This event is called on server application.
             First NetworkConnection in parameter is the connected peer.
             </summary>
            </member>
        <member name="E:PolyEngine.UnityNetworking.NetworkEvent.OnServerIsDisconnected">
             <summary>
             event : server is disconnected from a client.
             This event is called on server application. 
             </summary>
            </member>
        <member name="T:PolyEngine.Pooling.ObjectPool`1">
             <summary>
             Generic unity object pool.
             </summary>
            </member>
        <member name="F:PolyEngine.Pooling.ObjectPool`1.m_Active_vInstanceID_kPoolEntity">
             <summary>
             Pool for active game object.
             key = prefab.
             value = instances pool.
             </summary>
            </member>
        <member name="F:PolyEngine.Pooling.ObjectPool`1.m_InstanceMapping">
             <summary>
             Pool for instance - prefab mapping.
             Key = instance .
             Value = prefab
             </summary>
            </member>
        <member name="M:PolyEngine.Pooling.ObjectPool`1.Get(`0,`0@)">
             <summary>
             Gets a pool from specified instanceid.
             If gets a pooled object, return true.
             else return false .
             </summary>
             <param name="instanceid">Instanceid.</param>
            </member>
        <member name="M:PolyEngine.Pooling.ObjectPool`1.InstantiatePool(`0,System.Int32,System.Boolean)">
             <summary>
             Adds [InstanceCount] instance from the prefab to the pool.
             OnlyAddsForFirstTime : if true, only adds the instances when the instance pool not exists.
             </summary>
             <param name="prefab">Prefab.</param>
             <param name="InstanceCount">Instance count.</param>
            </member>
        <member name="M:PolyEngine.Pooling.ObjectPool`1.Spawn(`0)">
             <summary>
             Spawn a prefab. Prefab could be pooled or instantianted. 
             If position or rotation is not null, transform will be set, otherwise no action is taken on transform.
             </summary>
             <param name="prefab">Prefab.</param>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.Pooling.ObjectPool`1.Spawn(`0,`0@)">
             <summary>
             Spawn a prefab. Prefab could be pooled or instantianted. 
             Return true if the prefab is spawned from pool, otherwise return false.
             If position or rotation is not null, transform will be set, otherwise no action is taken on transform.
             </summary>
             <param name="prefab">Prefab.</param>
             <param name="instance">Instance.</param>
             <param name="position">Position.</param>
             <param name="rotation">Rotation.</param>
            </member>
        <member name="M:PolyEngine.Pooling.ObjectPool`1.Unspawn(`0)">
             <summary>
             Unspawn the specified instance, if the instance is a pooled object, will be redeemed to pool and be set deactive, else will be destroyed immediately.
             </summary>
             <param name="instance">Instance.</param>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.MeshUniqueVertices">
             <summary>
             Class that will take a Mesh as input and will build internal data to identify which vertices are repeated due to
             different vertex data (UV, vertex colors etc).
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.ListIndices">
             <summary>
             A list of vertex indices. We use this in order to be able to serialize a list of lists.
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.SerializableBoneWeight">
             <summary>
             Our serializable version of Unity's BoneWeight
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.UniqueVertex">
             <summary>
             Vertex that is has a unique position in space.
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.SubmeshesFaceList">
             <summary>
             For each submesh, a list of faces. ListIndices has 3 indices for each face.
             Each index is a vertex in ListVertices.
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.ListVertices">
             <summary>
             Our list of vertices. Vertices are unique, so no vertex shares the same position in space.
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.ListVerticesWorld">
             <summary>
             Our list of vertices in world space.
             Vertices are unique, so no vertex shares the same position in space.
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.ListBoneWeights">
             <summary>
             Our list of vertex bone weights
             </summary>
            </member>
        <!--FIXME: Invalid documentation markup was found for member M:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.BuildData(UnityEngine.Mesh,UnityEngine.Vector3[])-->
        <member name="T:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.RepeatedVertex">
             <summary>
             Vertex that has the same position in space as another one, but different vertex data (UV, color...).
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.RepeatedVertex.FaceIndex">
             <summary>
             Face it belongs to. This will be the same index in the source mesh as in the internal created face list.
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.RepeatedVertex.OriginalVertexIndex">
             <summary>
             Position in the original vertex array.
             </summary>
            </member>
        <member name="T:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.RepeatedVertexList">
             <summary>
             List of vertices that have the same position in space but different vertex data (UV, color...).
             </summary>
            </member>
        <member name="P:UltimateGameTools.MeshSimplifier.MeshUniqueVertices.RepeatedVertexList.UniqueIndex">
             <summary>
             Unique vertex index in our array for this list.
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.GazePhysicsRayEmitter">
             <summary>
             基于Physics检测的GazeRayEmitter
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazePhysicsRayEmitter.OnEnable">
             <summary>
             AddProvider
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazePhysicsRayEmitter.OnDisable">
             <summary>
             RemoveProvider
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.GazePhysicsRayEmitter.Update">
             <summary>
             当前做法是在Update里更新UI碰撞结果
             </summary>
            </member>
        <member name="T:PolyEngine.Tweening.PETweenExtension">
             <summary>
             Polyengine 的 tween 方法.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.GetTweenManager">
             <summary>
             Gets the tween manager.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PETweenFadingAudioClip(UnityEngine.AudioSource,UnityEngine.AudioClip,System.Single,System.Single)">
             <summary>
             PEs the tween shifting audio clip.
             </summary>
             <param name="audioSource">Audio source.</param>
             <param name="clip">Clip.</param>
             <param name="fadeTotalTime">Fade total time.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PETweenPlayAudioInSequence(UnityEngine.AudioSource,System.Boolean,System.Single,UnityEngine.AudioClip[])">
             <summary>
             play multiple audio clips on the audio source in sequence.
             </summary>
             <param name="audioSource">Audio source.</param>
             <param name="clip">Clip.</param>
             <param name="targetVolume">Target volume.</param>
             <param name="fadeTotalTime">Fade total time.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PEStopAudioSeqTween(UnityEngine.AudioSource,System.Boolean)">
             <summary>
             Stops the audio clip sequential playing tweener.
             </summary>
             <param name="audioSource">Audio source.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PETweenShiftingTexture(UnityEngine.Material,UnityEngine.Texture[],System.Single,System.Int32,System.Boolean,System.Action{UnityEngine.Material})">
             <summary>
             Tweens the shifting texture.
             轮替材质的贴图.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PETweenSetAnimatorFloat(UnityEngine.Animator,System.Single,System.Int32,System.Single,System.Single)">
             <summary>
             Tween seting animator float (damping)
             </summary>
             <param name="animator">Animator.</param>
             <param name="targetFloat">Target float.</param>
             <param name="ParameterHash">Parameter hash.</param>
             <param name="DampTime">Damp time.</param>
             <param name="Delayed">Delayed.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PETweenTransform(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Space,System.Single,System.Boolean)">
             <summary>
             tween and rotate the transform NFar meters and ends rotating the given rotation.
             令 transform 在 Duration 时间内，移动到 end position 位置并且最终朝向 end rotation.
             </summary>
             <param name="navAgent">Nav agent.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenExtension.PETweenNavMeshAgentTransform(UnityEngine.AI.NavMeshAgent,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Space,System.Single)">
             <summary>
             tween and rotate the transform NFar meters and ends rotating the given rotation.
             令 transform 在 Duration 时间内，移动到 end position 位置并且最终朝向 end rotation.
             </summary>
             <param name="navAgent">Nav agent.</param>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SerializableComponentRpc">
             <summary>
             Serlaized component rpc data.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.NetworkRpcMessage">
             <summary>
             Network RPC message.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.NetworkRPC">
             <summary>
             Network RPC.
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkRPC.RuntimeRpcs">
             <summary>
             Gets all of the runtime rpcs.
             </summary>
             <value>The runtime rpcs.</value>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkRPC.NetworkEvent_OnClientIsConnected(UnityEngine.Networking.NetworkClient)">
             <summary>
             Network event: when client is connected to server
             </summary>
             <param name="obj">Object.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkRPC.GetRpc(System.Object,System.String,System.Boolean)">
             <summary>
             Gets the rpc item.
             </summary>
             <returns>The rpc.</returns>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkRPC.NetworkInvokeRpc(System.Object,System.String,System.Object[])">
             <summary>
             Invoking the rpc on client.
             </summary>
             <param name="rpcIndex">Rpc index.</param>
             <param name="parameters">Parameters.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkRPC.AddSerializedRpc(UnityEngine.Object,System.String)">
             <summary>
             Adds the serialized rpc method info.
             </summary>
             <param name="rpcTarget">Rpc target.</param>
             <param name="method">Method.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkRPC.Clear">
             <summary>
             Clears all rpc runtime.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkRPC.AddRpc(System.Object,System.String,System.Boolean)">
             <summary>
             Adds a RPC runtime.
             </summary>
             <param name="rpcTarget">Rpc target.</param>
             <param name="method">Method.</param>
            </member>
        <member name="T:PolyEngine.MinMaxVectorAttribute">
             <summary>
             Attach this Minimum max vector attribute to a vector2 property
             </summary>
            </member>
        <member name="M:PolyEngine.AnimatorExtension.GetCurrentOrNextAnimatorStateInfo(UnityEngine.Animator,System.Int32)">
             <summary>
             Gets the current or next animator state info.
             获取当前，或者下一个 Animator State Info
             </summary>
             <returns>The current or next animator state info.</returns>
             <param name="animator">Animator.</param>
             <param name="layerIndex">Layer index.</param>
            </member>
        <member name="M:PolyEngine.AnimatorExtension.GetBehaviourExt``1(UnityEngine.Animator)">
             <summary>
             Gets the behaviour (extension).
             </summary>
             <returns>The behaviour ext.</returns>
             <param name="animator">Animator.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.AnimatorExtension.GetBehavioursExt``1(UnityEngine.Animator,System.String)">
             <summary>
             Gets the behaviours。
             Unity自带的 GetBehaviors方法不支持genric type类型，这个方法支持generic 类型的获取statemachine bahviour。
             </summary>
             <returns>The behaviours ext.</returns>
             <param name="src">Source.</param>
             <param name="TargetName">Target name.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.GameObjectExtension.DestroyAllChildren(UnityEngine.GameObject,UnityEngine.GameObject)">
             <summary>
             Removes all children except: [except]
             </summary>
             <param name="gameObject">Game object.</param>
             <param name="except">Except.</param>
            </member>
        <member name="T:PolyEngine.NullableValueType`1">
             <summary>
             Nullable value type.
             </summary>
            </member>
        <member name="P:PolyEngine.NullableValueType`1.Value">
             <summary>
             Gets or sets the value.
             </summary>
             <value>The value.</value>
            </member>
        <member name="P:PolyEngine.NullableValueType`1.HasValue">
             <summary>
             Gets a value indicating whether this nullable value instance has value.
             </summary>
             <value><c>true</c> if this instance has value; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:PolyEngine.NullableValueType`1.#ctor">
             <summary>
             Default constructor
             </summary>
            </member>
        <member name="T:PolyEngine.InputSystem.PEGraphicRaycaster">
             <summary>
             加强版的GraphicRaycaster,
             1）解除了"Point要在屏幕内"这一限制。
             2）增加EventLayer的检测
             </summary>
            </member>
        <member name="F:PolyEngine.InputSystem.PEGraphicRaycaster.s_SortedGraphics">
             <summary>
             Perform a raycast into the screen and collect all graphics underneath it.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.NetworkDebugLog">
             <summary>
             A script to broadcast debug log message on client, and reveal the message on unity editor.
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkDebugLog.workingMode">
             <summary>
             Gets or sets the working mode.
             </summary>
             <value>The working mode.</value>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkDebugLog.broadcastOnce(System.String)">
             <summary>
             Make a broadcasting for one time.
             </summary>
            </member>
        <member name="T:PolyEngine.GizmosDrawCameraFovFrustum">
             <summary>
             Gizmos draw camera fov frustum
             </summary>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleLoadOperationFull">
             <summary>
             Asset bundle load operation full.
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleLoadOperationFull.GetAssetBundle">
             <summary>
             Gets the asset bundle.
             </summary>
             <returns>The asset bundle.</returns>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleLoadOperationFull.SetDone">
             <summary>
             explicitly set the operation to be done.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.NetworkSync">
             <summary>
             Network sync.
             A util class setup network system in LAN.
             Note: this script will disable self component after connection has been setup.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.NetworkSync.SyncMode.Automatic">
             <summary>
             The automatic mode: start server as editor.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.NetworkSync.SyncMode.AlwaysServer">
             <summary>
             Always work as server
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.NetworkSync.SyncMode.AlwaysClient">
             <summary>
             Always work as client
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkSync.AutoReconnect">
             <summary>
             Should the script automatically reconnect to server/client after disconnection?
             </summary>
             <value><c>true</c> if auto reconnect; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkSync.BroadcastPort">
             <summary>
             Gets or sets the broadcast port.
             </summary>
             <value>The broadcast port.</value>
            </member>
        <member name="F:PolyEngine.UnityNetworking.NetworkSync.m_BroadcastKey">
             <summary>
             The key to broadcast. This key typically identifies the application.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.NetworkSync.serverIpAddress">
             <summary>
             The server ip address.
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkSync.isBroadcaster">
             <summary>
             If the current app a boardcaster or a receiver ?
             </summary>
             <value><c>true</c> if is broadcaster; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkSync.shouldBroadcasting">
             <summary>
             should the current app broadcast or listen to broadcaster ?
             </summary>
             <value><c>true</c> if should broadcasting; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkSync.IsReady">
             <summary>
             Is  Network Sync script ready. What Ready means client is connected to this server app.
             </summary>
             <value><c>true</c> if is ready; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.UnityNetworking.NetworkSync.Singletion">
             <summary>
             Gets the singletion.
             </summary>
             <value>The singletion.</value>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSync.HandleBroadcasting">
             <summary>
             Handles broadcasting on discovery.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSync.BroadcastAtServer">
             <summary>
             Start broadcast at server side.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSync.Connect2Server">
             <summary>
             Work at client app, connect to LAN server.
             </summary>
             <returns>The server.</returns>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSync.ServerSendNetworkMessage``1(System.Int16,``0)">
             <summary>
             Sends the network message from server to client
             </summary>
             <param name="msg">Message.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSync.onServerDisconnected(UnityEngine.Networking.NetworkMessage)">
             <summary>
             Network callback : on server disconnected.
             </summary>
             <param name="netMsg">Net message.</param>
            </member>
        <member name="M:PolyEngine.UltiDraw.Begin">
             <summary>
             Should be called each time before actual drawing.
             Return false for fail drawing.
             </summary>
            </member>
        <member name="M:PolyEngine.UltiDraw.DrawGridLBOrigin(UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32,System.Int32,System.Single,System.Single,UnityEngine.Color)">
             <summary>
             Draws the grid from origin point, where center, rotation is the left bottom point of the grid.
             </summary>
             <param name="center">Center.</param>
             <param name="rotation">Rotation.</param>
             <param name="cellsX">Cells x.</param>
             <param name="cellsY">Cells y.</param>
             <param name="sizeX">Size x.</param>
             <param name="sizeY">Size y.</param>
             <param name="color">Color.</param>
            </member>
        <member name="M:PolyEngine.UltiDraw.DrawGridRTOrigin(UnityEngine.Vector3,UnityEngine.Quaternion,System.Int32,System.Int32,System.Single,System.Single,UnityEngine.Color)">
             <summary>
             Draws the grid from origin point, where center, rotation is the right top point of the grid.
             </summary>
             <param name="center">Center.</param>
             <param name="rotation">Rotation.</param>
             <param name="cellsX">Cells x.</param>
             <param name="cellsY">Cells y.</param>
             <param name="sizeX">Size x.</param>
             <param name="sizeY">Size y.</param>
             <param name="color">Color.</param>
            </member>
        <member name="T:PolyEngine.DebugStateBehaviour">
             <summary>
             Debug state machine behaviour:
             Print Log when enter/exit state.
             Debug break when enter/exit state
             </summary>
            </member>
        <member name="T:PolyEngine.SceneListDropDownAttribute">
             <summary>
             Scene list drop down attribute: attach to string field, for drop down list selection GUI.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SerializableComponentProperties">
             <summary>
             Serlaized component properties.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SerializableComponentPropertyEntity">
             <summary>
             Serializable component property entity.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.SerializableComponentPropertyEntity.enableSerialization">
             <summary>
             enable serialization
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.SerializableComponentPropertyEntity.isField">
             <summary>
             If false, means this is a property that has getter/setter/
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.RuntimeSerializableEntity">
             <summary>
             Runtime serializable entity.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncComponentPropertyMessage">
             <summary>
             Sync dirty field message.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.NetworkSyncProperties">
             <summary>
             Network sync properties is a helpful tools to sync component's serialzable properties via network.
             Currently, only support sync server properties to client.
             </summary>
            </member>
        <member name="F:PolyEngine.UnityNetworking.NetworkSyncProperties.runtimeSerializeProperties">
             <summary>
             The runtime serialize properties.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSyncProperties.NetworkEvent_OnClientIsConnected(UnityEngine.Networking.NetworkClient)">
             <summary>
             Network event: when client is connected to server
             </summary>
             <param name="obj">Object.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSyncProperties.NetworkEvent_OnServerStarted">
             <summary>
             Network event: when server has been setup
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSyncProperties.ClearAll">
             <summary>
             Clear all synchronized property fields.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSyncProperties.AddProperty(System.Object,System.Reflection.FieldInfo,System.Boolean,System.Action)">
             <summary>
             Adds a property. If forceUpdate == true, will send update pack once after calling this method.
             </summary>
             <param name="sysObj">Sys object.</param>
             <param name="field">Field.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSyncProperties.AddProperty(System.Object,System.Reflection.PropertyInfo,System.Boolean,System.Action)">
             <summary>
             Adds a property. If forceUpdate == true, will send update pack once after calling this method.
             Only supports basic types and string types: float ,bool ,int ,uint ,ushort ,short ,string ,Vector2 ,Vector3 ,Vector4 ,Color
             </summary>
             <param name="sysObj">Sys object.</param>
             <param name="property">Property.</param>
            </member>
        <member name="M:PolyEngine.UnityNetworking.NetworkSyncProperties.GetSyncValueType(System.Type)">
             <summary>
             Gets the type of the sync value.
             </summary>
             <returns>The sync value type.</returns>
             <param name="fieldType">Field type.</param>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleLoadOperation.SetDone">
             <summary>
             explicitly set the operation to be done. 
             </summary>
            </member>
        <member name="T:PolyEngine.UnityBitConverter">
             <summary>
             Unity bit converter.
             </summary>
            </member>
        <member name="M:PolyEngine.UnityBitConverter.ConvertToVector3(System.Byte[],System.Int32)">
             <summary>
             Converts buffers to vector3.
             </summary>
             <returns>The to vector3.</returns>
             <param name="buffer">Buffer.</param>
             <param name="startIndex">Start index.</param>
            </member>
        <member name="M:PolyEngine.UnityBitConverter.ConvertToBytes(UnityEngine.Vector3)">
             <summary>
             Converts Vector3 to bytes.
             </summary>
             <returns>The to bytes.</returns>
             <param name="vector3">Vector3.</param>
            </member>
        <member name="M:PolyEngine.UnityBitConverter.ConvertToBytes(UnityEngine.Vector3,System.Byte[],System.Int32)">
             <summary>
             Converts to bytes and copy to buffer.
             </summary>
             <returns>The to bytes.</returns>
             <param name="vector3">Vector3.</param>
             <param name="buffers">Buffers.</param>
             <param name="startIndex">Start index.</param>
            </member>
        <member name="M:PolyEngine.UnityBitConverter.ConvertToQuaternion(System.Byte[],System.Int32)">
             <summary>
             Converts buffers to quaternion.
             </summary>
             <returns>The to vector3.</returns>
             <param name="buffer">Buffer.</param>
             <param name="startIndex">Start index.</param>
            </member>
        <member name="M:PolyEngine.UnityBitConverter.ConvertToBytes(UnityEngine.Quaternion)">
             <summary>
             Converts Quaternion to bytes.
             </summary>
             <returns>The to bytes.</returns>
             <param name="vector3">Vector3.</param>
            </member>
        <member name="M:PolyEngine.UnityBitConverter.ConvertToBytes(UnityEngine.Quaternion,System.Byte[],System.Int32)">
             <summary>
             Converts to bytes and copy to buffer.
             </summary>
             <returns>The to bytes.</returns>
             <param name="vector3">Vector3.</param>
             <param name="buffers">Buffers.</param>
             <param name="startIndex">Start index.</param>
            </member>
        <member name="T:PolyEngine.AssetBundles.AssetBundleProjectConfig">
             <summary>
             Asset bundle project config.
             asset bundle项目配置。这个文件配置在Resources目录。
             </summary>
            </member>
        <member name="P:PolyEngine.AssetBundles.AssetBundleProjectConfig.Location">
             <summary>
             Gets the location type.
             </summary>
             <value>The location.</value>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleProjectConfig.builtinBundles">
             <summary>
             Builtin的Bundle。定义每个平台的bundle在StreamingAsset中的路径:
             </summary>
            </member>
        <member name="F:PolyEngine.AssetBundles.AssetBundleProjectConfig.PersistentPath">
             <summary>
             定义: 存储在 PersistentData 文件的相对根路径。
             例如: PersistentPath = "ABC", 则Bundle目录是: %PersistentPath%/ABC/
             </summary>
            </member>
        <member name="M:PolyEngine.AssetBundles.AssetBundleProjectConfig.GetCurrentPlatformBundleInfo">
             <summary>
             Gets the current platform info.
             </summary>
             <returns>The current platform info.</returns>
            </member>
        <member name="T:PolyEngine.AssetBundles.PlatformInfoDictionary">
             <summary>
             Platform info dictionary.
             Key = platform ,
             Value = manifest asset bundle relative path.
             </summary>
            </member>
        <member name="M:PolyEngine.LabelAttribute.#ctor(System.String,System.Boolean)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.LabelAttribute" /> class.
             </summary>
             <param name="label">Label.</param>
             <param name="IsMandatoryField">If set to <c>true</c> is mandatory field.</param>
            </member>
        <member name="P:PolyEngine.InputSystem.I_TouchGesture.Enabled">
             <summary>
             enables/disables gesture detection script.
             </summary>
             <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.I_TouchGesture.IsPerforming">
             <summary>
             Is the gesture currently performed by user ?
             </summary>
             <value><c>true</c> if this instance is activated; otherwise, <c>false</c>.</value>
            </member>
        <member name="T:PolyEngine.AssetBundles.AudioClipBundleReference">
             <summary>
             Audio clip bundle reference.
             指向 asset bundle 的一个 audio clip的引用。
             </summary>
            </member>
        <member name="T:PolyEngine.ComponentDescriptionAttribute">
             <summary>
             Component description attribute.
             这个 Attribute 可以在 Inspector 上打印一段对这个component 的简短描述.
             </summary>
            </member>
        <member name="M:PolyEngine.ComponentDescriptionAttribute.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.ComponentDescriptionAttribute" /> class.
             </summary>
             <param name="desc">component 的简短描述</param>
            </member>
        <member name="T:PolyEngine.Tweening.PETweenManager">
             <summary>
             PE tween manager.
             </summary>
            </member>
        <member name="F:PolyEngine.Tweening.PETweenManager.animatorScheduledMatchTargetParameters">
             <summary>
             The scheduled animator match target parameters.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.AddFadeAudioClip(UnityEngine.AudioSource,UnityEngine.AudioClip,System.Single,System.Single)">
             <summary>
             Fades the audio clip.
             </summary>
             <param name="audioSource">Audio source.</param>
             <param name="clip">Clip.</param>
             <param name="totalTime">Total time.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.PlayAudioClipInSeq(UnityEngine.AudioSource,UnityEngine.AudioClip[],System.Boolean,System.Single)">
             <summary>
             Adds the play audio clip in seq.
             </summary>
             <param name="audioSource">Audio source.</param>
             <param name="clip">Clip.</param>
             <param name="timeSpan">Time span.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.StopAudioClipSequentialTween(UnityEngine.AudioSource,System.Boolean)">
             <summary>
             Stops the audio clip sequential tween.
             </summary>
             <param name="audioSource">Audio source.</param>
             <param name="immediately">If set to <c>true</c> immediately.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.AddMaterialTextureTween(UnityEngine.Material,UnityEngine.Texture[],System.Int32,System.Single,System.Boolean,System.Action{UnityEngine.Material})">
             <summary>
             Adds the material texture tween.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.ScheduleMatchingTarget(PolyEngine.ScheduleMatchingTargetParameter)">
             <summary>
             Schedults a matching target parameter into queue.
             </summary>
             <param name="scheduleParameter">Schedule parameter.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.CancelAllMatchingTargetSchedule(UnityEngine.Animator)">
             <summary>
             Determines whether this instance cancel all matching target schedule.
             </summary>
             <returns><c>true</c> if this instance cancel all matching target schedule; otherwise, <c>false</c>.</returns>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.AddAnimatorSetFloatTween(UnityEngine.Animator,System.Single,System.Int32,System.Single,System.Single)">
             <summary>
             Adds the animator set float tween.
             </summary>
             <param name="animator">Animator.</param>
             <param name="targetFloat">Target float.</param>
             <param name="ParameterHash">Parameter hash.</param>
             <param name="DampTime">Damp time.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.AddTransformTweener(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Space,System.Single,System.Boolean)">
             <summary>
             Adds the transform tweener.
             </summary>
             <param name="transform">Transform.</param>
             <param name="EndPosition">End position.</param>
             <param name="EndRotation">End rotation.</param>
             <param name="DurationTime">Duration time.</param>
             <param name="Delayed">Delayed.</param>
             <param name="shouldUpdateNavMeshAgent">If set to <c>true</c> should update nav mesh agent.</param>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.HandleMaterialTextureTween">
             <summary>
             Handles the material texture tween.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.HandleAnimatorSetFloatTween">
             <summary>
             Handles the animator set float tween.
             </summary>
            </member>
        <member name="M:PolyEngine.Tweening.PETweenManager.HandleTransformTween">
             <summary>
             Handles the transform tween.
             </summary>
            </member>
        <member name="T:PolyEngine.MinMaxValueAttribute">
             <summary>
             Attach this Minimum-max value attribute to a vector2 property
             </summary>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.AddUnduplicate``1(System.Collections.Generic.List{``0},``0)">
             <summary>
             Adds item if the item not exists in the list.
             </summary>
             <returns>The if not exists.</returns>
             <param name="genericList">Generic list.</param>
             <param name="item">Item.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.AddUnduplicate``1(System.Collections.Generic.HashSet{``0},``0)">
             <summary>
             Adds item if the item not exists in the hashset.
             </summary>
             <returns>The if not exists.</returns>
             <param name="genericList">Generic list.</param>
             <param name="item">Item.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.AddRangeUnduplicate``1(System.Collections.Generic.List{``0},System.Collections.Generic.IEnumerable{``0})">
             <summary>
             Adds items for those not exists in the list.
             </summary>
             <returns>How many items added.</returns>
             <param name="genericList">Generic list.</param>
             <param name="items">Items.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.ForEach``1(``0[],System.Action{``0})">
             <summary>
             Loops on each element on a postive direction (starts from zero);
             Warning: ForEach 中如果传入匿名委托会导致GC !
             </summary>
             <param name="genericArray">Generic array.</param>
             <param name="action">Action.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.ForEachReversed``1(``0[],System.Action{``0})">
             <summary>
             Loops on each element on a reversed direction (starts from max-index);
             </summary>
             <returns>How many items added.</returns>
             <param name="genericList">Generic list.</param>
             <param name="items">Items.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.Count``1(``0[],``0)">
             <summary>
             Counts how many item exists in genericArray
             </summary>
             <param name="genericArray">Generic array.</param>
             <param name="item">Item.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.Contains``1(``0[],``0)">
             <summary>
             Contains the specified genericArray and item.
             </summary>
             <param name="genericArray">Generic array.</param>
             <param name="item">Item.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.PolyEngineLinq.FindIndex``1(``0[],``0)">
             <summary>
             Finds the index of item.
             </summary>
             <returns>The index.</returns>
             <param name="array">Array.</param>
             <param name="item">Item.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="T:PolyEngine.InputSystem.ZoomGesture">
             <summary>
             Default zoom gesture.
             designating gesture:  user put two fingers on the screen,  slip towards/away each other horizontally .
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.ZoomGesture.ZoomScale">
             <summary>
             Gets the zoom scale, measured in pixel space.
             </summary>
             <value>The pan scale.</value>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncGameObjectActivenessMessage">
             <summary>
             Sync game object activeness message.
             </summary>
            </member>
        <member name="T:PolyEngine.UnityNetworking.SyncIdentity">
             <summary>
             Sync identity.
             </summary>
            </member>
        <member name="P:PolyEngine.UnityNetworking.SyncIdentity.SyncGameObjectActiveness">
             <summary>
             Should sync gameobject's active status ?
             </summary>
             <value><c>true</c> if sync game object activeness; otherwise, <c>false</c>.</value>
            </member>
        <member name="M:PolyEngine.UnityNetworking.SyncIdentity.GetNetworkSyncComponent``1(System.Int32)">
             <summary>
             Gets a network sync component by SyncID.
             </summary>
             <returns>The network sync.</returns>
             <param name="SyncID">Sync I.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="M:PolyEngine.UnityNetworking.SyncIdentity.GetNetworkSyncComponent(System.Int32,System.Type)">
             <summary>
             Gets a network sync component by SyncID.
             </summary>
             <returns>The network sync.</returns>
             <param name="SyncID">Sync I.</param>
             <typeparam name="T">The 1st type parameter.</typeparam>
            </member>
        <member name="T:PolyEngine.UnityNetworking.ForceSceneID">
             <summary>
             Force set unet identity's scene id.
             </summary>
            </member>
        <member name="T:PolyEngine.EditScriptableAttribute">
             <summary>
             Display a ScriptableObject field with an inline editor
             </summary>
            </member>
        <member name="T:PolyEngine.Vector2Int16">
             <summary>
             Vector2 where element is short.
             </summary>
            </member>
        <member name="M:PolyEngine.Vector2Int16.#ctor(System.Int32,System.Int32)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Vector2Int16" /> struct.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
             <param name="z">The z coordinate.</param>
             <param name="w">The width.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.#ctor(System.Int16,System.Int16)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Vector2Int16" /> struct.
             </summary>
             <param name="x">The x coordinate.</param>
             <param name="y">The y coordinate.</param>
             <param name="z">The z coordinate.</param>
             <param name="w">The width.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.#ctor(PolyEngine.Vector2Int16)">
             <summary>
             Initializes a new instance of the <see cref="T:PolyEngine.Vector2Int16" /> struct.
             </summary>
             <param name="src">Source.</param>
            </member>
        <member name="P:PolyEngine.Vector2Int16.magnitude">
             <summary>
             Gets the magnitude.
             </summary>
             <value>The magnitude.</value>
            </member>
        <member name="P:PolyEngine.Vector2Int16.Item(System.Int32)">
             <summary>
             Gets or sets the <see cref="T:PolyEngine.Vector2Int16" /> at the specified index.
             </summary>
             <param name="index">Index.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.Clamp(PolyEngine.Vector2Int16,PolyEngine.Vector2Int16)">
             <summary>
             Clamps the Vector4Int to the bounds given by min and max.
             </summary>
             <param name="min">Minimum.</param>
             <param name="max">Max.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.Max(PolyEngine.Vector2Int16,PolyEngine.Vector2Int16)">
             <summary>
             Returns a vector that is made from the largest components of two vectors.
             </summary>
             <param name="lhs">Lhs.</param>
             <param name="rhs">Rhs.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.Min(PolyEngine.Vector2Int16,PolyEngine.Vector2Int16)">
             <summary>
             Returns a vector that is made from the smallest components of two vectors.
             </summary>
             <param name="lhs">Lhs.</param>
             <param name="rhs">Rhs.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.Distance(PolyEngine.Vector2Int16,PolyEngine.Vector2Int16)">
             <summary>
             return distance between a and b
             </summary>
             <param name="a">The alpha component.</param>
             <param name="b">The blue component.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.FloorToInt(UnityEngine.Vector2)">
             <summary>
             Converts a Vector4 to a Vector4Int by doing a Floor to each value.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.RoundToInt(UnityEngine.Vector4)">
             <summary>
             Converts a Vector3 to a Vector3Int by doing a Round to each value.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.CeilToInt(UnityEngine.Vector4)">
             <summary>
             Converts a Vector3 to a Vector3Int by doing a Ceiling to each value.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="M:PolyEngine.Vector2Int16.Scale(PolyEngine.Vector2Int16,PolyEngine.Vector2Int16)">
             <summary>
             Multiplies two vectors component-wise.
             Every component in the result is a component of a multiplied by the same component of b.
             </summary>
             <returns>The to int.</returns>
             <param name="v4">V4.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.PETouchInputEventTrigger">
             <summary>
             Input event trigger for mobile touch moudle
             </summary>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouchInputEventTrigger.FilterUIEvent">
             <summary>
             Gets or sets a value indicating whether this <see cref="!:PolyEngine.InputSystem.PEInputEventTrigger" /> filter
             user interface event.
             If FilterUIevent == true (default), UI event will be ignored.
             </summary>
             <value><c>true</c> if filter user interface event; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouchInputEventTrigger.LongPressTime">
             <summary>
             Time to invoke a long press event
             </summary>
             <value>The long press time.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouchInputEventTrigger.DontTriggerTapWhenDoubleTap">
             <summary>
             When true, if double tap happens, don't invoke single tap event.
             </summary>
             <value><c>true</c> if dont trigger tap when double tap; otherwise, <c>false</c>.</value>
            </member>
        <member name="P:PolyEngine.InputSystem.PETouchInputEventTrigger.DoubleTapTime">
             <summary>
             Gets or sets the double tap time.
             </summary>
             <value>The double tap time.</value>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouchInputEventTrigger.checkEventFilter(PolyEngine.InputSystem.PointerInfo)">
             <summary>
             Checks the event filter. if filter UI event == true and pointer began on UI, return false.
             </summary>
             <returns><c>true</c>, if event filter was checked, <c>false</c> otherwise.</returns>
             <param name="pointer">Pointer.</param>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouchInputEventTrigger.checkEventFilter(PolyEngine.InputSystem.TapInfo)">
             <summary>
             Checks the event filter. if filter UI event == true and pointer began on UI, return false.
             </summary>
             <returns><c>true</c>, if event filter was checked, <c>false</c> otherwise.</returns>
             <param name="pointer">Pointer.</param>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouchInputEventTrigger.OnPointerBegan(PolyEngine.InputSystem.PointerInfo)">
             <summary>
             Callback: on press down on screen.
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouchInputEventTrigger.OnPointerTap(PolyEngine.InputSystem.TapInfo)">
             <summary>
             callback : on tap
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouchInputEventTrigger.OnPointerStay(PolyEngine.InputSystem.PointerInfo)">
             <summary>
             on pointer stay event.
             </summary>
             <param name="pointer">Pointer.</param>
            </member>
        <member name="M:PolyEngine.InputSystem.PETouchInputEventTrigger.OnPointerLongStay(PolyEngine.InputSystem.PointerInfo)">
             <summary>
             on pointer long held event
             </summary>
             <param name="pointer">Pointer.</param>
            </member>
        <member name="T:PolyEngine.InputSystem.TouchProviderManager">
             <summary>
             TouchProvider管理器
             </summary>
            </member>
        <member name="M:PolyEngine.InputSystem.TouchProviderManager.GetTouchId">
             <summary>
             获取当前空缺的TouchId，每个GazeRayEmitter
             在AddProvider之前都要更新本身的fingerId，防止冲突
             </summary>
             <returns></returns>
            </member>
    </members>
</doc>
